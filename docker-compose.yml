version: "3"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    ports:
      - "8080:8080"
    networks:
      - aqary-backend_default
    environment:
      - PORT=0.0.0.0:8080
      - ENVIRONMENT=${ENVIRONMENT:-dev}
      - DB_NAME=${DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - DOCKER_DB_ADDRESS=${DOCKER_DB_ADDRESS}
      - AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING}
      - REDIS_HOST=${REDIS_HOST:-192.168.1.193:6380}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-root}
      - REDIS_URL=${REDIS_URL}
      - HISTORY_SERVICE_API_TOKEN=${HISTORY_SERVICE_API_TOKEN}
      - RABBITMQ_ADDRESS=${RABBITMQ_ADDRESS}
      - HISTORY_REPO_BASE_URL=${HISTORY_REPO_BASE_URL}
      - APPLE_TEAM_ID_INVESTMENT=${APPLE_TEAM_ID_INVESTMENT}
      - APPLE_CLIENT_ID_INVESTMENT=${APPLE_CLIENT_ID_INVESTMENT}
      - APPLE_KEY_ID_INVESTMENT=${APPLE_KEY_ID_INVESTMENT}
      - APPLE_PRIVATE_KEY_INVESTMENT=${APPLE_PRIVATE_KEY_INVESTMENT}
      - APPLE_TEAM_ID_FINE_HOME=${APPLE_TEAM_ID_FINE_HOME}
      - APPLE_CLIENT_ID_FINE_HOME=${APPLE_CLIENT_ID_FINE_HOME}
      - APPLE_KEY_ID_FINE_HOME=${APPLE_KEY_ID_FINE_HOME}
      - APPLE_PRIVATE_KEY_FINE_HOME=${APPLE_PRIVATE_KEY_FINE_HOME}
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    depends_on:
      db:
        condition: service_healthy
    restart: always

  cron_service:
    build:
      context: .
      dockerfile: Dockerfile.cron
      args:
        - BUILDKIT_INLINE_CACHE=1
    environment:
      - CRON_PORT=${CRON_PORT}
      - REDIS_HOST=${REDIS_HOST:-192.168.1.193:6380}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-root}
      - REDIS_URL=${REDIS_URL}
      - DOCKER_DB_ADDRESS=${DOCKER_DB_ADDRESS}
      - ENVIRONMENT=${ENVIRONMENT}
    ports:
      - "8082:8081"
    networks:
      - aqary-backend_default
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:latest
    container_name: db
    ports:
      - "5433:5432"
    networks:
      - aqary-backend_default
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME:-postgres}
    command: postgres -c 'max_connections=1000'
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  postgres-backup:
    image: prodrigestivill/postgres-backup-local
    restart: always
    networks:
      - aqary-backend_default
    volumes:
      - /var/opt/postgres/backups:/backups
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${DB_NAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=postgres
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
    depends_on:
      - db

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - aqary-backend_default

volumes:
  postgres_data:
networks:
  aqary-backend_default:
    external: true
  aqary-internal:
    name: aqary-internal
    internal: true
    external: true
