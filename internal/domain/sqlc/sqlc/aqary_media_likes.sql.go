// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: aqary_media_likes.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createAqaryMediaRections = `-- name: CreateAqaryMediaRections :one
INSERT INTO aqary_media_likes(
    property_unit_id,
    which_property_unit,
    which_propertyhub_key,
    is_branch,
    is_liked,
    like_reaction_id,
    users_id
) VALUES (
    $1, $2, $3, $4, $5, $6, $7
) RETURNING id, property_unit_id, which_property_unit, which_propertyhub_key, is_branch, is_liked, like_reaction_id, users_id, created_at, updated_at
`

type CreateAqaryMediaRectionsParams struct {
	PropertyUnitID      int64       `json:"property_unit_id"`
	WhichPropertyUnit   int64       `json:"which_property_unit"`
	WhichPropertyhubKey pgtype.Int8 `json:"which_propertyhub_key"`
	IsBranch            bool        `json:"is_branch"`
	IsLiked             bool        `json:"is_liked"`
	LikeReactionID      int64       `json:"like_reaction_id"`
	UsersID             int64       `json:"users_id"`
}

func (q *Queries) CreateAqaryMediaRections(ctx context.Context, arg CreateAqaryMediaRectionsParams) (AqaryMediaLike, error) {
	row := q.db.QueryRow(ctx, createAqaryMediaRections,
		arg.PropertyUnitID,
		arg.WhichPropertyUnit,
		arg.WhichPropertyhubKey,
		arg.IsBranch,
		arg.IsLiked,
		arg.LikeReactionID,
		arg.UsersID,
	)
	var i AqaryMediaLike
	err := row.Scan(
		&i.ID,
		&i.PropertyUnitID,
		&i.WhichPropertyUnit,
		&i.WhichPropertyhubKey,
		&i.IsBranch,
		&i.IsLiked,
		&i.LikeReactionID,
		&i.UsersID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
