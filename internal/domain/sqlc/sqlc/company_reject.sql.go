// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: company_reject.sql

package sqlc

import (
	"context"
	"time"
)

const createCompanyReject = `-- name: CreateCompanyReject :one
INSERT INTO company_rejects (
 reason,
 company_id,
 rejected_by,
 created_at,
 updated_at
)VALUES (
 $1, $2, $3, $4, $5
)RETURNING id, reason, company_id, rejected_by, created_at, updated_at
`

type CreateCompanyRejectParams struct {
	Reason     string    `json:"reason"`
	CompanyID  int64     `json:"company_id"`
	RejectedBy int64     `json:"rejected_by"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
}

func (q *Queries) CreateCompanyReject(ctx context.Context, arg CreateCompanyRejectParams) (CompanyReject, error) {
	row := q.db.QueryRow(ctx, createCompanyReject,
		arg.Reason,
		arg.CompanyID,
		arg.RejectedBy,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i CompanyReject
	err := row.Scan(
		&i.ID,
		&i.Reason,
		&i.CompanyID,
		&i.RejectedBy,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
