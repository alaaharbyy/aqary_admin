// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: tower_media.sql

package sqlc

import (
	"context"
	"time"
)

const createTowerMedia = `-- name: CreateTowerMedia :one
INSERT INTO tower_media (
    towers_id,
    image_url,
    created_at,
    updated_by
) VALUES (
    $1, $2, $3, $4
) RETURNING id, towers_id, image_url, created_at, updated_by
`

type CreateTowerMediaParams struct {
	TowersID  int64     `json:"towers_id"`
	ImageUrl  []string  `json:"image_url"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedBy int64     `json:"updated_by"`
}

func (q *Queries) CreateTowerMedia(ctx context.Context, arg CreateTowerMediaParams) (TowerMedium, error) {
	row := q.db.QueryRow(ctx, createTowerMedia,
		arg.TowersID,
		arg.ImageUrl,
		arg.CreatedAt,
		arg.UpdatedBy,
	)
	var i TowerMedium
	err := row.Scan(
		&i.ID,
		&i.TowersID,
		&i.ImageUrl,
		&i.CreatedAt,
		&i.UpdatedBy,
	)
	return i, err
}

const getMediaByTowerID = `-- name: GetMediaByTowerID :one
SELECT id, towers_id, image_url, created_at, updated_by 
FROM
	tower_media 
WHERE 
	tower_media.towers_id=$1
`

func (q *Queries) GetMediaByTowerID(ctx context.Context, towersID int64) (TowerMedium, error) {
	row := q.db.QueryRow(ctx, getMediaByTowerID, towersID)
	var i TowerMedium
	err := row.Scan(
		&i.ID,
		&i.TowersID,
		&i.ImageUrl,
		&i.CreatedAt,
		&i.UpdatedBy,
	)
	return i, err
}

const updateTowerMedia = `-- name: UpdateTowerMedia :one
UPDATE tower_media 
SET 
    image_url = $2,
    updated_by = $3,
    created_at =$4
WHERE id = $1
RETURNING id, towers_id, image_url, created_at, updated_by
`

type UpdateTowerMediaParams struct {
	ID        int64     `json:"id"`
	ImageUrl  []string  `json:"image_url"`
	UpdatedBy int64     `json:"updated_by"`
	CreatedAt time.Time `json:"created_at"`
}

func (q *Queries) UpdateTowerMedia(ctx context.Context, arg UpdateTowerMediaParams) (TowerMedium, error) {
	row := q.db.QueryRow(ctx, updateTowerMedia,
		arg.ID,
		arg.ImageUrl,
		arg.UpdatedBy,
		arg.CreatedAt,
	)
	var i TowerMedium
	err := row.Scan(
		&i.ID,
		&i.TowersID,
		&i.ImageUrl,
		&i.CreatedAt,
		&i.UpdatedBy,
	)
	return i, err
}
