// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: shared_documents.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createSharedDocuments = `-- name: CreateSharedDocuments :one
INSERT INTO shared_documents (
    sharing_id,
    category_id,
    subcategory_id,
    file_url,
    status,
    is_allowed,
    created_at,
    updated_at
)VALUES (
    $1, $2, $3, $4, $5, $6, $7, $8
)RETURNING id, sharing_id, category_id, subcategory_id, file_url, status, is_allowed, created_at, updated_at
`

type CreateSharedDocumentsParams struct {
	SharingID     pgtype.Int8        `json:"sharing_id"`
	CategoryID    pgtype.Int8        `json:"category_id"`
	SubcategoryID pgtype.Int8        `json:"subcategory_id"`
	FileUrl       string             `json:"file_url"`
	Status        pgtype.Int4        `json:"status"`
	IsAllowed     pgtype.Bool        `json:"is_allowed"`
	CreatedAt     pgtype.Timestamptz `json:"created_at"`
	UpdatedAt     pgtype.Timestamptz `json:"updated_at"`
}

func (q *Queries) CreateSharedDocuments(ctx context.Context, arg CreateSharedDocumentsParams) (SharedDocument, error) {
	row := q.db.QueryRow(ctx, createSharedDocuments,
		arg.SharingID,
		arg.CategoryID,
		arg.SubcategoryID,
		arg.FileUrl,
		arg.Status,
		arg.IsAllowed,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i SharedDocument
	err := row.Scan(
		&i.ID,
		&i.SharingID,
		&i.CategoryID,
		&i.SubcategoryID,
		&i.FileUrl,
		&i.Status,
		&i.IsAllowed,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
