// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: leads_notification.sql

package sqlc

import (
	"context"
)

const createLeadNotification = `-- name: CreateLeadNotification :one
INSERT INTO leads_notification (
    leads_id,
    agent_sms,
    agent_mail,
    agent_whatsapp,
    agent_system_notofication,
    lead_sms,
    lead_mail,
    lead_whatsapp,
    lead_system_notification,
    follow_up_email,
    closed_lost_email,
    closed_lost_sms,
    closed_lost_whatsapp,
    closed_won_email,
    closed_won_sms,
    closed_won_whatsapp
) VALUES (
    $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16
) RETURNING id, leads_id, agent_sms, agent_mail, agent_whatsapp, agent_system_notofication, lead_sms, lead_mail, lead_whatsapp, lead_system_notification, follow_up_email, closed_lost_email, closed_lost_sms, closed_lost_whatsapp, closed_won_email, closed_won_sms, closed_won_whatsapp
`

type CreateLeadNotificationParams struct {
	LeadsID                 int64 `json:"leads_id"`
	AgentSms                bool  `json:"agent_sms"`
	AgentMail               bool  `json:"agent_mail"`
	AgentWhatsapp           bool  `json:"agent_whatsapp"`
	AgentSystemNotofication bool  `json:"agent_system_notofication"`
	LeadSms                 bool  `json:"lead_sms"`
	LeadMail                bool  `json:"lead_mail"`
	LeadWhatsapp            bool  `json:"lead_whatsapp"`
	LeadSystemNotification  bool  `json:"lead_system_notification"`
	FollowUpEmail           bool  `json:"follow_up_email"`
	ClosedLostEmail         bool  `json:"closed_lost_email"`
	ClosedLostSms           bool  `json:"closed_lost_sms"`
	ClosedLostWhatsapp      bool  `json:"closed_lost_whatsapp"`
	ClosedWonEmail          bool  `json:"closed_won_email"`
	ClosedWonSms            bool  `json:"closed_won_sms"`
	ClosedWonWhatsapp       bool  `json:"closed_won_whatsapp"`
}

func (q *Queries) CreateLeadNotification(ctx context.Context, arg CreateLeadNotificationParams) (LeadsNotification, error) {
	row := q.db.QueryRow(ctx, createLeadNotification,
		arg.LeadsID,
		arg.AgentSms,
		arg.AgentMail,
		arg.AgentWhatsapp,
		arg.AgentSystemNotofication,
		arg.LeadSms,
		arg.LeadMail,
		arg.LeadWhatsapp,
		arg.LeadSystemNotification,
		arg.FollowUpEmail,
		arg.ClosedLostEmail,
		arg.ClosedLostSms,
		arg.ClosedLostWhatsapp,
		arg.ClosedWonEmail,
		arg.ClosedWonSms,
		arg.ClosedWonWhatsapp,
	)
	var i LeadsNotification
	err := row.Scan(
		&i.ID,
		&i.LeadsID,
		&i.AgentSms,
		&i.AgentMail,
		&i.AgentWhatsapp,
		&i.AgentSystemNotofication,
		&i.LeadSms,
		&i.LeadMail,
		&i.LeadWhatsapp,
		&i.LeadSystemNotification,
		&i.FollowUpEmail,
		&i.ClosedLostEmail,
		&i.ClosedLostSms,
		&i.ClosedLostWhatsapp,
		&i.ClosedWonEmail,
		&i.ClosedWonSms,
		&i.ClosedWonWhatsapp,
	)
	return i, err
}

const getLeadNotificationByLeadIdLimitOne = `-- name: GetLeadNotificationByLeadIdLimitOne :one
SELECT id, leads_id, agent_sms, agent_mail, agent_whatsapp, agent_system_notofication, lead_sms, lead_mail, lead_whatsapp, lead_system_notification, follow_up_email, closed_lost_email, closed_lost_sms, closed_lost_whatsapp, closed_won_email, closed_won_sms, closed_won_whatsapp
FROM leads_notification
WHERE leads_id = $1
LIMIT 1
`

func (q *Queries) GetLeadNotificationByLeadIdLimitOne(ctx context.Context, leadsID int64) (LeadsNotification, error) {
	row := q.db.QueryRow(ctx, getLeadNotificationByLeadIdLimitOne, leadsID)
	var i LeadsNotification
	err := row.Scan(
		&i.ID,
		&i.LeadsID,
		&i.AgentSms,
		&i.AgentMail,
		&i.AgentWhatsapp,
		&i.AgentSystemNotofication,
		&i.LeadSms,
		&i.LeadMail,
		&i.LeadWhatsapp,
		&i.LeadSystemNotification,
		&i.FollowUpEmail,
		&i.ClosedLostEmail,
		&i.ClosedLostSms,
		&i.ClosedLostWhatsapp,
		&i.ClosedWonEmail,
		&i.ClosedWonSms,
		&i.ClosedWonWhatsapp,
	)
	return i, err
}

const updateLeadNotification = `-- name: UpdateLeadNotification :one
UPDATE leads_notification
SET
    agent_sms = $2,
    agent_mail = $3,
    agent_whatsapp = $4,
    agent_system_notofication = $5,
    lead_sms = $6,
    lead_mail = $7,
    lead_whatsapp = $8,
    lead_system_notification = $9,
    follow_up_email = $10,
    closed_lost_email = $11,
    closed_lost_sms = $12,
    closed_lost_whatsapp = $13,
    closed_won_email = $14,
    closed_won_sms = $15,
    closed_won_whatsapp = $16
WHERE
    leads_id = $1
RETURNING id, leads_id, agent_sms, agent_mail, agent_whatsapp, agent_system_notofication, lead_sms, lead_mail, lead_whatsapp, lead_system_notification, follow_up_email, closed_lost_email, closed_lost_sms, closed_lost_whatsapp, closed_won_email, closed_won_sms, closed_won_whatsapp
`

type UpdateLeadNotificationParams struct {
	LeadsID                 int64 `json:"leads_id"`
	AgentSms                bool  `json:"agent_sms"`
	AgentMail               bool  `json:"agent_mail"`
	AgentWhatsapp           bool  `json:"agent_whatsapp"`
	AgentSystemNotofication bool  `json:"agent_system_notofication"`
	LeadSms                 bool  `json:"lead_sms"`
	LeadMail                bool  `json:"lead_mail"`
	LeadWhatsapp            bool  `json:"lead_whatsapp"`
	LeadSystemNotification  bool  `json:"lead_system_notification"`
	FollowUpEmail           bool  `json:"follow_up_email"`
	ClosedLostEmail         bool  `json:"closed_lost_email"`
	ClosedLostSms           bool  `json:"closed_lost_sms"`
	ClosedLostWhatsapp      bool  `json:"closed_lost_whatsapp"`
	ClosedWonEmail          bool  `json:"closed_won_email"`
	ClosedWonSms            bool  `json:"closed_won_sms"`
	ClosedWonWhatsapp       bool  `json:"closed_won_whatsapp"`
}

func (q *Queries) UpdateLeadNotification(ctx context.Context, arg UpdateLeadNotificationParams) (LeadsNotification, error) {
	row := q.db.QueryRow(ctx, updateLeadNotification,
		arg.LeadsID,
		arg.AgentSms,
		arg.AgentMail,
		arg.AgentWhatsapp,
		arg.AgentSystemNotofication,
		arg.LeadSms,
		arg.LeadMail,
		arg.LeadWhatsapp,
		arg.LeadSystemNotification,
		arg.FollowUpEmail,
		arg.ClosedLostEmail,
		arg.ClosedLostSms,
		arg.ClosedLostWhatsapp,
		arg.ClosedWonEmail,
		arg.ClosedWonSms,
		arg.ClosedWonWhatsapp,
	)
	var i LeadsNotification
	err := row.Scan(
		&i.ID,
		&i.LeadsID,
		&i.AgentSms,
		&i.AgentMail,
		&i.AgentWhatsapp,
		&i.AgentSystemNotofication,
		&i.LeadSms,
		&i.LeadMail,
		&i.LeadWhatsapp,
		&i.LeadSystemNotification,
		&i.FollowUpEmail,
		&i.ClosedLostEmail,
		&i.ClosedLostSms,
		&i.ClosedLostWhatsapp,
		&i.ClosedWonEmail,
		&i.ClosedWonSms,
		&i.ClosedWonWhatsapp,
	)
	return i, err
}
