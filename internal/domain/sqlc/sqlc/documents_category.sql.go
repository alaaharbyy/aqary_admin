// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: documents_category.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getAllDocumentsCategories = `-- name: GetAllDocumentsCategories :many
SELECT id, category,category_ar
FROM documents_category
`

type GetAllDocumentsCategoriesRow struct {
	ID         int64       `json:"id"`
	Category   string      `json:"category"`
	CategoryAr pgtype.Text `json:"category_ar"`
}

func (q *Queries) GetAllDocumentsCategories(ctx context.Context) ([]GetAllDocumentsCategoriesRow, error) {
	rows, err := q.db.Query(ctx, getAllDocumentsCategories)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllDocumentsCategoriesRow
	for rows.Next() {
		var i GetAllDocumentsCategoriesRow
		if err := rows.Scan(&i.ID, &i.Category, &i.CategoryAr); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
