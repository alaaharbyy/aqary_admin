// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: professions.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getProfession = `-- name: GetProfession :one
SELECT id, title, title_ar FROM professions WHERE id = $1 LIMIT 1
`

func (q *Queries) GetProfession(ctx context.Context, id int64) (Profession, error) {
	row := q.db.QueryRow(ctx, getProfession, id)
	var i Profession
	err := row.Scan(&i.ID, &i.Title, &i.TitleAr)
	return i, err
}

const getProfessionDummy = `-- name: GetProfessionDummy :one
UPDATE professions SET title = COALESCE($2, title), title_ar = COALESCE($3, title_ar) where id = $1 RETURNING id, title, title_ar
`

type GetProfessionDummyParams struct {
	ID       int64       `json:"id"`
	NTitle   pgtype.Text `json:"n_title"`
	NTitleAr pgtype.Text `json:"n_title_ar"`
}

func (q *Queries) GetProfessionDummy(ctx context.Context, arg GetProfessionDummyParams) (Profession, error) {
	row := q.db.QueryRow(ctx, getProfessionDummy, arg.ID, arg.NTitle, arg.NTitleAr)
	var i Profession
	err := row.Scan(&i.ID, &i.Title, &i.TitleAr)
	return i, err
}
