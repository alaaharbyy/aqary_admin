definitions:
  aqary_admin_internal_delivery_rest_helper.ApiResponse:
    properties:
      error:
        example: any error message
        type: string
    type: object
  aqary_admin_internal_domain_dto.Address:
    properties:
      Id:
        type: integer
      city:
        type: integer
      community:
        type: integer
      country:
        type: integer
      lat:
        type: number
      lng:
        type: number
      locationUrl:
        type: string
      state:
        type: integer
      subCommunity:
        type: integer
    type: object
  aqary_admin_internal_domain_dto.AuctionInputsDto:
    properties:
      auctionCategory:
        type: integer
      auctionLocation:
        $ref: '#/definitions/aqary_admin_internal_domain_dto.Address'
      auctionTitle:
        type: string
      auctionUrl:
        type: string
      companiesId:
        description: 'TODO: in future companyId should fetch from loginToken'
        type: integer
      email:
        type: string
      endDate:
        type: string
      minBidAmount:
        type: number
      minIncrementAmount:
        type: number
      mobileNumber:
        type: string
      prebidStartDate:
        type: string
      propertyInfo:
        $ref: '#/definitions/aqary_admin_internal_domain_dto.AuctionPropertyInfo'
      startDate:
        type: string
      tags:
        items:
          type: integer
        type: array
      whatsapp:
        type: string
      winningBidAmount:
        type: number
    type: object
  aqary_admin_internal_domain_dto.AuctionPropertyInfo:
    properties:
      amenities:
        items:
          type: integer
        type: array
      builtUpAreaInSqFt:
        type: number
      description:
        type: string
      descriptionAr:
        type: string
      facilities:
        items:
          type: integer
        type: array
      furnished:
        type: integer
      hasTenants:
        type: boolean
      isExistingProperty:
        type: boolean
      isLuxury:
        type: boolean
      noOfElevators:
        type: integer
      noOfFloors:
        type: integer
      noOfParking:
        type: integer
      noOfPools:
        type: integer
      noOfRetailCenters:
        type: integer
      noOfUnits:
        type: integer
      ownership:
        type: integer
      plotAreaInSqFt:
        type: number
      plotNo:
        type: string
      propertyLocation:
        $ref: '#/definitions/aqary_admin_internal_domain_dto.Address'
      propertyName:
        type: string
      propertyTitle:
        type: string
      propertyTitleArabic:
        type: string
      propertyType:
        type: integer
      propertyUnitId:
        description: propertyId OR unitId
        type: integer
      propertyUsage:
        type: integer
      sectorNo:
        type: string
      selectType:
        description: Property , Unit
        type: integer
      tenentContract:
        $ref: '#/definitions/aqary_admin_internal_domain_dto.TenentContract'
      viewsID:
        items:
          type: integer
        type: array
    type: object
  aqary_admin_internal_domain_dto.AuctionViewDetails:
    properties:
      auctionCategory:
        type: integer
      auctionLocation:
        $ref: '#/definitions/aqary_admin_internal_domain_dto.Address'
      auctionStatus:
        type: integer
      auctionTitle:
        type: string
      auctionUrl:
        type: string
      companiesId:
        type: integer
      createdAt:
        type: string
      email:
        type: string
      endDate:
        type: string
      id:
        type: integer
      minBidAmount:
        type: number
      minIncrementAmount:
        type: number
      mobileNumber:
        type: string
      noOfBidders:
        type: integer
      prebidStartDate:
        type: string
      propertyInfo:
        $ref: '#/definitions/aqary_admin_internal_domain_dto.AuctionPropertyInfo'
      qualityScore:
        type: number
      refNo:
        type: string
      startDate:
        type: string
      subscription:
        type: string
      tags:
        items:
          type: integer
        type: array
      updatedAt:
        type: string
      whatsapp:
        type: string
      winningBidAmount:
        type: number
    type: object
  aqary_admin_internal_domain_dto.CreatePartnerRequest:
    properties:
      auctionId:
        type: integer
      partnerLogo:
        type: string
      partnerName:
        type: string
      website:
        type: string
    type: object
  aqary_admin_internal_domain_dto.CreatePlanRequest:
    properties:
      auctionId:
        type: integer
      planTitle:
        type: integer
      planUrls:
        items:
          type: string
        type: array
    type: object
  aqary_admin_internal_domain_dto.Partner:
    properties:
      auctionId:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      partnerLogo:
        type: string
      partnerName:
        type: string
      refNo:
        type: string
      updatedAt:
        type: string
      website:
        type: string
    type: object
  aqary_admin_internal_domain_dto.Plan:
    properties:
      auctionId:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      planTitle:
        type: string
      planUrls:
        items:
          type: string
        type: array
      updatedAt:
        type: string
    type: object
  aqary_admin_internal_domain_dto.TenentContract:
    properties:
      amount:
        type: number
      contractEndDate:
        type: string
      contractStartDate:
        type: string
    type: object
  aqary_admin_internal_domain_requests_project.CreateFinancialProviderReq:
    properties:
      provider_name:
        type: string
      provider_type:
        type: integer
    required:
    - provider_name
    - provider_type
    type: object
  aqary_admin_internal_domain_requests_project.CreateProjectFinancialProviderReq:
    properties:
      financial_providers_id:
        items:
          type: integer
        type: array
      phases_id:
        type: integer
      projects_id:
        type: integer
    required:
    - financial_providers_id
    type: object
  aqary_admin_internal_domain_requests_project.CreateProjectRequest:
    properties:
      amenities_id:
        description: '@ AmenitiesID is the list of amenity IDs associated with the
          project.'
        items:
          type: integer
        type: array
      branch_developer_company_id:
        description: '@ BranchDeveloperCompanyID is the ID of the branch developer
          company.                                    // @ RefNumber is the reference
          number of the project.'
        type: integer
      built_up_area:
        description: '@ BuiltUpArea represents the built-up area of the property.'
        type: number
      city:
        description: '@ CityID is the ID of the city where the project is located.'
        type: integer
      community:
        description: '@ CommunityID is the ID of the community where the project is
          located.'
        type: integer
      completion_date:
        description: '@ CompletionDate is the expected completion date of the project.'
        type: string
      completion_percentage:
        description: '@ CompletionPercentage denotes the completion percentage of
          the project.'
        type: integer
      completion_percentage_date:
        description: '@ CompletionPercentageDate is the date when the completion percentage
          was last updated.'
        type: string
      completion_status:
        description: '@ CompletionStatus represents the completion status of the project.'
        type: integer
      country:
        description: '@ CountryID is the ID of the country where the project is located.'
        type: integer
      currency_id:
        type: integer
      description:
        description: '@ Description is the description of the project.'
        type: string
      description_arabic:
        description: '@ Phases represents the phases of the project.'
        type: string
      facilities_id:
        description: |-
          Lat                      float64 `form:"lat" binding:"required"`                         // @ Lat is the latitude of the project location.
          Lng                      float64 `form:"lng" binding:"required"`                         // @ Lng is the longitude of the project location.
        items:
          type: integer
        type: array
      furnished:
        description: '@ Furnished indicates whether the property is furnished or not.'
        type: integer
      handover_date:
        description: '@ HandoverDate is the date when the property is handed over.'
        type: string
      is_multiphase:
        description: '@ IsMultiPhase is the boolean to check whether the project is
          multi-phase or not.'
        type: boolean
      license_no:
        description: '@ LicenseNo is the license number of the project.'
        type: string
      life_style:
        description: '@ Lifestyle represents the lifestyle features associated with
          the property.'
        type: integer
      no_of_properties:
        description: '@ No of properties in this project'
        type: integer
      ownership:
        description: '@ Ownership indicates the ownership status of the property.'
        type: integer
      parent_developer_company_id:
        description: '@ ParentDeveloperCompanyID is the ID of the parent developer
          company.'
        type: integer
      plot_area:
        description: '@ PlotArea denotes the area of the plot.'
        type: number
      project_name:
        description: '@ ProjectName is the name of the project.'
        type: string
      project_no:
        description: '@ ProjectNo is the project number.'
        type: string
      service_charge:
        description: '@ ServiceCharge represents the service charge associated with
          the property.'
        type: integer
      start_date:
        description: '@ StartDate is the date when the project started.'
        type: string
      starting_price:
        type: integer
      state:
        description: '@ StateID is the ID of the state where the project is located.'
        type: integer
      sub_community:
        description: '@ SubCommunityID is the ID of the sub-community where the project
          is located.'
        type: integer
      unit_of_measure:
        type: string
    required:
    - city
    - country
    - description
    - facilities_id
    - is_multiphase
    - license_no
    - parent_developer_company_id
    - project_name
    - project_no
    - state
    type: object
  aqary_admin_internal_domain_requests_project.DeleteFinancialProviderReq:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  aqary_admin_internal_domain_requests_project.DeleteProjPhasFinancialProvidersReq:
    properties:
      id:
        type: integer
      phases_id:
        type: integer
      projects_id:
        type: integer
    required:
    - id
    type: object
  aqary_admin_internal_domain_requests_project.GetAllFinancialProviderReq:
    properties:
      page_no:
        type: integer
      page_size:
        type: integer
    required:
    - page_no
    - page_size
    type: object
  aqary_admin_internal_domain_requests_project.GetAllProjPhasFinancialProvidersReq:
    properties:
      page_no:
        type: integer
      page_size:
        type: integer
      phases_id:
        type: integer
      projects_id:
        type: integer
    required:
    - page_no
    - page_size
    type: object
  aqary_admin_internal_domain_requests_project.GetBrokerCompaniesReq:
    properties:
      id:
        type: integer
      is_state:
        type: boolean
    type: object
  aqary_admin_internal_domain_requests_project.GetProviderNamesByTypeReq:
    properties:
      provider_type_id:
        type: integer
    required:
    - provider_type_id
    type: object
  aqary_admin_internal_domain_requests_user.CheckEmailRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  aqary_admin_internal_domain_requests_user.CheckUsernameRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  aqary_admin_internal_domain_requests_user.CreateDepartmentRequest:
    properties:
      company_id:
        type: integer
      title:
        type: string
      title_ar:
        type: string
    type: object
  aqary_admin_internal_domain_requests_user.CreateRolePermissionRequest:
    properties:
      permissions_id:
        items:
          type: integer
        type: array
      roles_id:
        type: integer
      sub_section_id:
        items:
          type: integer
        type: array
    required:
    - permissions_id
    - roles_id
    type: object
  aqary_admin_internal_domain_requests_user.CreateRoleRequest:
    properties:
      department_id:
        type: integer
      permissions:
        type: string
      role:
        type: string
    required:
    - department_id
    - role
    type: object
  aqary_admin_internal_domain_requests_user.CreateSectionPermissionRequest:
    properties:
      sub_title:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  aqary_admin_internal_domain_requests_user.CreateSubSectionPermissionRequest:
    properties:
      indicator:
        type: integer
      permissions_id:
        type: integer
      sub_section_button_action:
        type: string
      sub_section_button_id:
        type: integer
      sub_title:
        type: string
      title:
        type: string
    required:
    - permissions_id
    - sub_title
    - title
    type: object
  aqary_admin_internal_domain_requests_user.CreateUserReq:
    properties:
      about:
        type: string
      about_arabic:
        type: string
      botim_number:
        type: string
      brn_expiry:
        type: string
      brn_license_issue_date:
        description: brn file ...................................
        type: string
      brn_no:
        description: '? other detail'
        type: string
      city_id:
        type: integer
      community_id:
        type: integer
      company_id:
        type: integer
      country_id:
        description: |-
          Locations []int64 `form:"locations"`
          location
        type: integer
      department_id:
        type: integer
      email:
        type: string
      experience_since:
        type: string
      facebook:
        type: string
      feature:
        type: integer
      first_name:
        type: string
      gender:
        type: integer
      is_show_user_details:
        type: boolean
      is_verified:
        type: boolean
      last_name:
        type: string
      license_expiry_date:
        type: string
      license_registration_date:
        type: string
      linkedin:
        type: string
      nationalities:
        items:
          type: integer
        type: array
      passport_no:
        type: string
      premium:
        type: integer
      primary_phone_number:
        type: string
      role_id:
        type: integer
      secondary_phone_number:
        type: string
      show_botim_number:
        type: boolean
      show_hide_details:
        description: passport pic
        type: boolean
      show_tawasal_number:
        type: boolean
      show_whatsapp_number:
        type: boolean
      spoken_languages:
        items:
          type: integer
        type: array
      standard:
        type: integer
      state_id:
        type: integer
      sub_community_id:
        type: integer
      tawasal_number:
        type: string
      topdeal:
        type: integer
      twitter:
        type: string
      user_type_id:
        type: integer
      username:
        type: string
      whatsapp_number:
        description: numbers
        type: string
    required:
    - department_id
    - email
    - first_name
    - last_name
    - primary_phone_number
    - role_id
    - user_type_id
    - username
    type: object
  aqary_admin_internal_domain_requests_user.DeleteOneRolePermissionRequest:
    properties:
      permissions_id:
        type: integer
    required:
    - permissions_id
    type: object
  aqary_admin_internal_domain_requests_user.GetAllOtherUserByCountryRequest:
    properties:
      country_id:
        type: integer
      page_no:
        type: integer
      page_size:
        type: integer
    required:
    - country_id
    - page_no
    - page_size
    type: object
  aqary_admin_internal_domain_requests_user.GetAllUserRequest:
    properties:
      page_no:
        minimum: 1
        type: integer
      page_size:
        minimum: 1
        type: integer
      search:
        type: string
    required:
    - page_no
    - page_size
    type: object
  aqary_admin_internal_domain_requests_user.GetSingleUserReq:
    properties:
      company_id:
        type: integer
    type: object
  aqary_admin_internal_domain_requests_user.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    type: object
  aqary_admin_internal_domain_requests_user.RegisterRequest:
    properties:
      all_languages_id:
        items:
          type: integer
        type: array
      botim:
        type: string
      brn:
        description: '! in case of usertypeid is 2 or the user is agent'
        type: string
      brn_expiry:
        type: string
      broker_company_id:
        type: integer
      city:
        type: integer
      community:
        type: integer
      company_number:
        type: string
      country:
        type: integer
      department:
        description: '? FK - department.id'
        type: integer
      description:
        description: |-
          profile_image_url
          cover_image
        type: string
      email:
        type: string
      first_name:
        description: '! need for profile...'
        type: string
      gender:
        type: integer
      hide_user_detail:
        description: '.....................'
        type: boolean
      last_name:
        type: string
      password:
        type: string
      permissions:
        type: string
      phone_number:
        description: '?'
        type: string
      roles_id:
        description: '?  FK -< roles.id'
        type: integer
      secondary_phone_number:
        type: string
      state:
        type: integer
      status:
        type: integer
      sub_community:
        type: integer
      tawasal:
        type: string
      user_types_id:
        description: '? FK - user_types.id'
        type: integer
      username:
        description: '! //////'
        type: string
      whatsapp_number:
        type: string
    required:
    - email
    - password
    - user_types_id
    - username
    type: object
  aqary_admin_internal_domain_requests_user.Request:
    properties:
      company_id:
        type: integer
      company_type:
        type: integer
      is_branch:
        type: boolean
      permissions_id:
        items:
          type: integer
        type: array
      subsection_id:
        items:
          type: integer
        type: array
    required:
    - company_id
    - company_type
    type: object
  aqary_admin_internal_domain_requests_user.ResetPasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  aqary_admin_internal_domain_requests_user.ResetPasswordWithoutOldPasswordRequest:
    properties:
      new_password:
        type: string
    required:
    - new_password
    type: object
  aqary_admin_internal_domain_requests_user.UpdateDepartmentRequest:
    properties:
      company_id:
        type: integer
      id:
        type: integer
      title:
        type: string
      title_ar:
        type: string
    type: object
  aqary_admin_internal_domain_requests_user.UpdateRolePermissionRequest:
    properties:
      permissions_id:
        items:
          type: integer
        type: array
      sub_section_id:
        items:
          type: integer
        type: array
    required:
    - permissions_id
    type: object
  aqary_admin_internal_domain_requests_user.UpdateRoleRequest:
    properties:
      department_id:
        type: integer
      permissions:
        type: string
      role:
        type: string
    required:
    - department_id
    type: object
  aqary_admin_internal_domain_requests_user.UpdateSectionPermissionRequest:
    properties:
      sub_title:
        type: string
      title:
        type: string
    type: object
  aqary_admin_internal_domain_requests_user.UpdateSubSectionPermissionRequest:
    properties:
      indicator:
        type: integer
      permissions_id:
        type: integer
      sub_section_button_action:
        type: string
      sub_section_button_id:
        type: integer
      sub_title:
        type: string
      title:
        type: string
    type: object
  aqary_admin_internal_domain_requests_user.UpdateUserByStatusReq:
    properties:
      id:
        description: '@ company user id'
        type: integer
      status:
        type: integer
    required:
    - id
    - status
    type: object
  aqary_admin_internal_domain_requests_user.UpdateUserRequest:
    properties:
      city:
        type: integer
      community:
        type: integer
      company_id:
        type: integer
      country:
        type: integer
      department:
        type: integer
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      permissions:
        type: string
      phone_number:
        type: string
      roles_id:
        type: integer
      state:
        type: integer
      sub_community:
        type: integer
    type: object
  aqary_admin_internal_domain_requests_user.UserTypeRequest:
    properties:
      user_type:
        type: string
    type: object
  aqary_admin_internal_domain_requests_user.UserUpdateStatusReq:
    properties:
      id:
        type: integer
      status:
        type: integer
    type: object
  aqary_admin_internal_domain_responses_project.BrokerCompanyNames:
    properties:
      id:
        type: integer
      is_branch:
        type: boolean
      label:
        type: string
    type: object
  aqary_admin_internal_domain_responses_project.DeveloperCompanyNames:
    properties:
      id:
        type: integer
      label:
        type: string
    type: object
  aqary_admin_internal_domain_responses_project.GetAllFinancialProvidersRes:
    properties:
      id:
        type: integer
      logo_url:
        type: string
      provider_name:
        type: string
      provider_type:
        $ref: '#/definitions/aqary_admin_old_repo_model.CustomFormat'
    type: object
  aqary_admin_internal_domain_responses_project.GetAllProjPhasFinancialProvidersRes:
    properties:
      id:
        type: integer
      logo_url:
        type: string
      provider_name:
        type: string
      provider_type:
        type: integer
    type: object
  aqary_admin_internal_domain_responses_user.AllPendingUserOutput:
    properties:
      city:
        type: string
      community:
        type: string
      company_id:
        type: integer
      company_type:
        type: integer
      country:
        type: string
      department:
        type: string
      email:
        type: string
      id:
        type: integer
      is_branch:
        type: boolean
      phone:
        type: string
      role:
        type: string
      state:
        type: string
      sub_community:
        type: string
      username:
        type: string
      verification_status:
        type: string
    type: object
  aqary_admin_internal_domain_responses_user.AllRolesOutput:
    properties:
      id:
        type: integer
      is_role_exist:
        type: boolean
      label:
        type: string
    type: object
  aqary_admin_internal_domain_responses_user.AllUserOutput:
    properties:
      city:
        type: string
      community:
        type: string
      country:
        type: string
      department:
        type: string
      email:
        type: string
      id:
        type: integer
      location:
        type: string
      phone:
        type: string
      role:
        type: string
      state:
        type: string
      status:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      sub_community:
        type: string
      username:
        type: string
    type: object
  aqary_admin_internal_domain_responses_user.CustomAllQuaternarySubSectionPermission:
    properties:
      id:
        type: integer
      indicator:
        type: integer
      label:
        type: string
      permission_id:
        type: integer
      primary_id:
        type: integer
      quinary_permission:
        items:
          $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomAllQuinarySubSectionPermission'
        type: array
      secondary_id:
        type: integer
      sub_label:
        type: string
      sub_section_button_action:
        type: string
      sub_section_button_id:
        type: integer
      tertiary_id:
        type: integer
    type: object
  aqary_admin_internal_domain_responses_user.CustomAllQuinarySubSectionPermission:
    properties:
      id:
        type: integer
      indicator:
        type: integer
      label:
        type: string
      permission_id:
        type: integer
      primary_id:
        type: integer
      quaternary_id:
        type: integer
      secondary_id:
        type: integer
      sub_label:
        type: string
      sub_section_button_action:
        type: string
      sub_section_button_id:
        type: integer
      tertiary_id:
        type: integer
    type: object
  aqary_admin_internal_domain_responses_user.CustomAllSecondarySubSectionPermission:
    properties:
      id:
        type: integer
      indicator:
        type: integer
      label:
        type: string
      permission_id:
        type: integer
      primary_id:
        type: integer
      quaternary_permission:
        items:
          $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomAllQuaternarySubSectionPermission'
        type: array
      secondary_id:
        type: integer
      sub_label:
        type: string
      sub_section_button_action:
        type: string
      sub_section_button_id:
        type: integer
    type: object
  aqary_admin_internal_domain_responses_user.CustomAlllPermission:
    properties:
      id:
        type: integer
      indicator:
        type: integer
      label:
        type: string
      secondary_permission:
        items:
          $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomSubSectionSecondaryPermission'
        type: array
      sub_label:
        type: string
    type: object
  aqary_admin_internal_domain_responses_user.CustomRolePermission:
    properties:
      id:
        type: integer
      label:
        type: string
      section_permissions:
        items:
          $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomSectionPermission'
        type: array
    type: object
  aqary_admin_internal_domain_responses_user.CustomSectionPermission:
    properties:
      id:
        type: integer
      indicator:
        type: integer
      label:
        type: string
      permissions:
        items:
          $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomAlllPermission'
        type: array
      sub_label:
        type: string
    type: object
  aqary_admin_internal_domain_responses_user.CustomSubSectionSecondaryPermission:
    properties:
      id:
        type: integer
      indicator:
        type: integer
      label:
        type: string
      permission_id:
        type: integer
      primary_id:
        type: integer
      sub_label:
        type: string
      sub_section_button_action:
        type: string
      sub_section_button_id:
        type: integer
      tertiary_permission:
        items:
          $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomAllSecondarySubSectionPermission'
        type: array
    type: object
  aqary_admin_internal_domain_responses_user.DashboardResult:
    properties:
      email:
        type: string
      first_name:
        type: string
      have_company:
        type: boolean
      is_company_verified:
        type: boolean
      last_name:
        type: string
      phone_number:
        type: string
      profile_picture:
        type: string
      section_permissions: {}
      token:
        type: string
      user_id:
        type: integer
      user_types_id:
        type: integer
      username:
        type: string
    type: object
  aqary_admin_internal_domain_responses_user.DeletedAqaryUserOutput:
    properties:
      department:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone_number:
        type: string
      role:
        type: string
    type: object
  aqary_admin_internal_domain_responses_user.SectionPermission:
    properties:
      id:
        type: integer
      sub_title:
        type: string
      title:
        type: string
    type: object
  aqary_admin_internal_domain_responses_user.SubSectionPermissionOutput:
    properties:
      id:
        type: integer
      indicator:
        type: integer
      is_it_end:
        type: boolean
      label:
        type: string
      sub_label:
        type: string
      sub_section_button_action:
        type: string
      sub_section_button_id:
        type: integer
    type: object
  aqary_admin_internal_domain_responses_user.UpdatedUserOutput:
    properties:
      city:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      community:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      country:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      department:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      permission:
        items:
          type: integer
        type: array
      phone:
        type: string
      role:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      state:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      sub_community:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      sub_section_permission:
        items:
          type: integer
        type: array
      username:
        type: string
    type: object
  aqary_admin_internal_domain_responses_user.UserCountOutput:
    properties:
      active_users:
        type: integer
      inactive_users:
        type: integer
      total_users:
        type: integer
    type: object
  aqary_admin_internal_domain_responses_user.UserOutput:
    properties:
      city:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      community:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      country:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      department: {}
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      permission: {}
      phone:
        type: string
      role: {}
      state:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      sub_community:
        $ref: '#/definitions/aqary_admin_pkg_utils_fn.CustomFormat'
      user_type_id:
        type: integer
      username:
        type: string
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.Department:
    properties:
      company_id:
        $ref: '#/definitions/pgtype.Int8'
      created_at:
        type: string
      department:
        type: string
      department_ar:
        $ref: '#/definitions/pgtype.Text'
      id:
        type: integer
      status:
        type: integer
      updated_at:
        type: string
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.Exhibition:
    properties:
      addresses_id:
        type: integer
      cities_id:
        type: integer
      community_id:
        type: integer
      countries_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      description_ar:
        $ref: '#/definitions/pgtype.Text'
      email:
        type: string
      end_date:
        type: string
      event_banner_url:
        type: string
      event_logo_url:
        type: string
      event_status:
        type: integer
      exhibition_category:
        type: integer
      exhibition_type:
        type: integer
      facilities:
        items:
          type: integer
        type: array
      hosted_by_id:
        $ref: '#/definitions/pgtype.Int8'
      hosted_company_type:
        type: integer
      id:
        type: integer
      is_host_branch:
        $ref: '#/definitions/pgtype.Bool'
      is_verified:
        $ref: '#/definitions/pgtype.Bool'
      location_url:
        type: string
      mobile:
        type: string
      no_of_booths:
        $ref: '#/definitions/pgtype.Int8'
      no_of_floors:
        $ref: '#/definitions/pgtype.Int8'
      promotion_video:
        $ref: '#/definitions/pgtype.Text'
      ref_no:
        type: string
      registration_fees:
        $ref: '#/definitions/pgtype.Float8'
      registration_link:
        type: string
      self_hosted:
        $ref: '#/definitions/pgtype.Bool'
      specific_address:
        type: string
      start_date:
        type: string
      states_id:
        type: integer
      sub_communities_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      whatsapp:
        type: string
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.ExhibitionBooth:
    properties:
      exhibitions_id:
        type: integer
      floor_no:
        $ref: '#/definitions/pgtype.Text'
      id:
        type: integer
      interactive_link:
        $ref: '#/definitions/pgtype.Text'
      no_of_booths:
        $ref: '#/definitions/pgtype.Int8'
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.ExhibitionsMedium:
    properties:
      created_at:
        type: string
      exhibitions_id:
        type: integer
      gallery_type:
        type: integer
      id:
        type: integer
      media_type:
        type: integer
      media_url:
        items:
          type: string
        type: array
      updated_at:
        $ref: '#/definitions/pgtype.Timestamptz'
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.FinancialProvider:
    properties:
      created_at:
        type: string
      id:
        type: integer
      logo_url:
        type: string
      provider_name:
        type: string
      provider_type:
        description: 1 => Bank & 2 => Financial Institution
        type: integer
      ref_no:
        type: string
      updated_at:
        type: string
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.GetRemainingCompanyQuotaRow:
    properties:
      product:
        type: string
      total_no_of_products:
        type: integer
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.Project:
    properties:
      addresses_id:
        type: integer
      countries_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      description_arabic:
        $ref: '#/definitions/pgtype.Text'
      developer_companies_id:
        type: integer
      developer_company_branches_id:
        $ref: '#/definitions/pgtype.Int8'
      facts:
        items:
          type: integer
        type: array
      id:
        type: integer
      is_multiphase:
        $ref: '#/definitions/pgtype.Bool'
      is_verified:
        $ref: '#/definitions/pgtype.Bool'
      license_no:
        type: string
      live_status:
        $ref: '#/definitions/pgtype.Bool'
      no_of_views:
        type: integer
      polygon_coords:
        items:
          type: integer
        type: array
      project_name:
        type: string
      project_no:
        type: string
      project_rank:
        type: integer
      rating:
        type: number
      ref_number:
        type: string
      status:
        type: integer
      updated_at:
        type: string
      users_id:
        type: integer
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.ProjectFinancialProvider:
    properties:
      financial_providers_id:
        description: foriegn key ids of table financial_providers
        items:
          type: integer
        type: array
      id:
        type: integer
      phases_id:
        $ref: '#/definitions/pgtype.Int8'
      projects_id:
        type: integer
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.PublishListing:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      entity_id:
        type: integer
      entity_type_id:
        type: integer
      id:
        type: integer
      is_enabled:
        $ref: '#/definitions/pgtype.Bool'
      is_internal:
        $ref: '#/definitions/pgtype.Bool'
      share_id:
        $ref: '#/definitions/pgtype.Int4'
      title:
        type: string
      updated_at:
        type: string
      webportal_id:
        type: integer
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.Role:
    properties:
      created_at:
        type: string
      department_id:
        $ref: '#/definitions/pgtype.Int8'
      id:
        type: integer
      role:
        type: string
      updated_at:
        type: string
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.RolesPermission:
    properties:
      created_at:
        type: string
      id:
        type: integer
      permissions_id:
        items:
          type: integer
        type: array
      roles_id:
        type: integer
      sub_section_permission:
        items:
          type: integer
        type: array
      updated_at:
        type: string
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.SearchAllAgentRow:
    properties:
      id:
        type: integer
      phone_number:
        $ref: '#/definitions/pgtype.Text'
      username:
        type: string
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.ShareRequest:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      id:
        type: integer
      owner_id:
        type: integer
      request_status:
        type: integer
      share_with:
        type: integer
      shared_doc_id:
        type: integer
      updated_at:
        type: string
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.SingleShareDoc:
    properties:
      documents_category_id:
        type: integer
      documents_subcategory_id:
        type: integer
      file_url:
        type: string
      id:
        type: integer
      is_allowed:
        $ref: '#/definitions/pgtype.Bool'
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.SubSection:
    properties:
      created_at:
        type: string
      id:
        type: integer
      indicator:
        type: integer
      permissions_id:
        type: integer
      sub_section_button_action:
        type: string
      sub_section_button_id:
        type: integer
      sub_section_name:
        type: string
      sub_section_name_constant:
        type: string
      updated_at:
        type: string
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.SubscriptionsPrice:
    properties:
      countries_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      id:
        type: integer
      price:
        type: number
      subscription_name:
        type: string
      updated_at:
        type: string
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      experience_since:
        $ref: '#/definitions/pgtype.Timestamptz'
      id:
        type: integer
      is_verified:
        $ref: '#/definitions/pgtype.Bool'
      password:
        type: string
      profiles_id:
        type: integer
      roles_id:
        $ref: '#/definitions/pgtype.Int8'
      show_hide_details:
        $ref: '#/definitions/pgtype.Bool'
      social_login:
        $ref: '#/definitions/pgtype.Text'
      status:
        type: integer
      updated_at:
        type: string
      user_types_id:
        type: integer
      username:
        type: string
    type: object
  aqary_admin_internal_domain_sqlc_sqlc.UserType:
    properties:
      created_at:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      user_type:
        type: string
    type: object
  aqary_admin_internal_usecases_shares_project_share.GetAllSharingByProjectReq:
    properties:
      phase_id:
        type: integer
      project_id:
        type: integer
      property_id:
        type: integer
      property_key:
        type: integer
      share_type:
        type: integer
      unit_category:
        type: string
      unit_id:
        type: integer
    required:
    - share_type
    type: object
  aqary_admin_internal_usecases_shares_project_share.UnsharedReq:
    properties:
      phase_id:
        type: integer
      project_id:
        type: integer
      property_id:
        type: integer
      property_key:
        type: integer
      unit_category:
        type: string
      unit_id:
        type: integer
    type: object
  aqary_admin_internal_usecases_shares_publish.CreatePublishRequest:
    properties:
      description:
        type: string
      entity_id:
        minimum: 1
        type: integer
      entity_type_id:
        minimum: 1
        type: integer
      gallery_type:
        type: string
      media_type:
        type: integer
      media_url:
        type: string
      plan_data:
        type: string
      plan_title:
        type: string
      publish_type:
        type: integer
      share_id:
        description: |-
          ProjectID      int32   `form:"project_id"`
          PhaseId        *int64  `form:"phase_id"`
          PropertyKey    *int32  `form:"property_key"`
          PropertyID     *int32  `form:"property_id"`
          PropertyBranch *bool   `form:"property_branch"`
          IsUnit         *bool   `form:"is_unit"`
          UnitID         *int32  `form:"unit_id"`
          UnitCategory   string  `form:"unit_category"`
        type: integer
      title:
        type: string
      uploaded_media_urls:
        items:
          type: string
        type: array
      uploaded_plan_urls:
        items:
          type: string
        type: array
      web_portal_id:
        items:
          type: integer
        type: array
    required:
    - entity_id
    - entity_type_id
    type: object
  aqary_admin_internal_usecases_shares_publish.EnableOrDisableReq:
    properties:
      all_publish_ids:
        items:
          type: integer
        type: array
      is_enable:
        type: boolean
      single_publish_id:
        type: integer
    type: object
  aqary_admin_internal_usecases_shares_publish.GalleryOutput:
    properties:
      id:
        type: integer
      main_media_section:
        type: string
      media_type:
        type: integer
      url:
        items:
          $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.GalleryUrlOutput'
        type: array
    type: object
  aqary_admin_internal_usecases_shares_publish.GalleryReq:
    properties:
      id:
        type: integer
      url:
        type: string
    required:
    - id
    - url
    type: object
  aqary_admin_internal_usecases_shares_publish.GalleryUrlOutput:
    properties:
      id:
        type: integer
      link:
        type: string
    type: object
  aqary_admin_internal_usecases_shares_publish.Output:
    properties:
      is_enabled:
        type: boolean
      publish:
        items:
          $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.PublishOut'
        type: array
    type: object
  aqary_admin_internal_usecases_shares_publish.PlanAndGalleryOutput:
    properties:
      gallery:
        items:
          $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.gallery'
        type: array
      plan:
        items:
          $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.plan'
        type: array
    type: object
  aqary_admin_internal_usecases_shares_publish.PublishOut:
    properties:
      is_enabled:
        type: boolean
      logo_url:
        type: string
      name:
        type: string
      publish_id:
        type: integer
      web_portal_id:
        type: integer
    type: object
  aqary_admin_internal_usecases_shares_publish.PublishProjectOutput:
    properties:
      completion_percentage:
        type: integer
      completion_status:
        type: integer
      developer_company:
        $ref: '#/definitions/pgtype.Text'
      id:
        type: integer
      no_of_phases:
        type: integer
      phase_type:
        type: string
      project_name:
        type: string
      publish_id:
        type: integer
      quality_score:
        type: number
      rating:
        type: number
      ref_no:
        type: string
    type: object
  aqary_admin_internal_usecases_shares_publish.PublishProjectPropertyOutput:
    properties:
      phase_name:
        type: string
      project_name:
        type: string
      property_name:
        type: string
      publish_id:
        type: integer
      ref_no:
        type: string
    type: object
  aqary_admin_internal_usecases_shares_publish.PublishProjectPropertyUnitOutput:
    properties:
      is_shared:
        type: boolean
      phase_name:
        type: string
      project_id:
        type: integer
      project_name:
        type: string
      property_id:
        type: integer
      property_name:
        type: string
      publish_id:
        type: integer
      ref_no:
        type: string
      unit_category:
        type: string
      unit_id:
        type: integer
      unit_title:
        type: string
    type: object
  aqary_admin_internal_usecases_shares_publish.gallery:
    properties:
      file:
        items:
          type: string
        type: array
      id:
        type: integer
      main_media_type:
        type: string
      media_type:
        type: integer
    type: object
  aqary_admin_internal_usecases_shares_publish.plan:
    properties:
      file:
        items:
          type: string
        type: array
      id:
        type: integer
      plan_type:
        type: string
    type: object
  aqary_admin_old_repo_model.CustomFormat:
    properties:
      id:
        type: integer
      label:
        type: string
    type: object
  aqary_admin_pkg_utils.ErrResponseSwagger:
    properties:
      error:
        example: any error message
        type: string
    type: object
  aqary_admin_pkg_utils_exceptions.ErrorCode:
    enum:
    - 00SWR
    - 000BR
    - 00UNA
    - 00ILC
    - 000PD
    - 00UNF
    - CGEAU
    - CNVEC
    - 000AE
    - 00UCV
    - 00UAE
    - 00EAE
    - 00EAE
    - 0PTAE
    - 0DTAP
    - 00IAT
    - 0ATNF
    - 0ACNU
    - 00DAT
    - 0MUNF
    - 0PUNF
    - 0DUNF
    type: string
    x-enum-varnames:
    - SomethingWentWrongErrorCode
    - BadRequestErrorCode
    - UserNotAuthorizedErrorCode
    - InvalidCredentialsErrorCode
    - PermissionDeniedErrorCode
    - NoDataFoundErrorCode
    - CannotGiveEmailAndUsernameErrorCode
    - CompanyNotVerifiedErrorCode
    - AlreadyExistCode
    - UniqueConstraintViolationErrorCode
    - UsernameAlreadyExistsErrorCode
    - EmailAlreadyExistsErrorCode
    - EmailAlreadyExistErrorCode
    - DuplicatePlanTitleErrorCode
    - DuplicateDocumentTypeErrorCode
    - InvalidAuctionTypeErrorCode
    - ActivityTypeNotFountErrorCode
    - AuctionCanNotUpdateErrorCode
    - DuplicateAuctionTitleErrorCode
    - MediaNotFoundErorrCode
    - PlanDocumentNotFoundErrorCode
    - DocumentNotFoundErrorCode
  aqary_admin_pkg_utils_exceptions.ErrorMessage:
    enum:
    - something went wrong
    - bad request
    - user not authorized,please login
    - invalid login credentials
    - permission denied for this action
    - no data found
    - cannot give email and username
    - your company is not verified
    - already exist
    - a unique constraint was violated
    - username already exists
    - email already exists
    - one account already exist with this email, please try with another one
    - One auction already exist with the same auction title, Please create a diffrent
      title
    - A Plan with this plan title is already exist
    - A Document with this document type is already exist
    - Invalid request, please pass a valid auctionType
    - Invalid request, please pass a valid auctionId
    - Invalid auctionType value, it should be ID of Auction Type
    - Invalid request, please pass a valid activityType
    - Invalid activity type, no activity found for provided activity type
    - Auction can update only when it is in draft state
    - This media url is not exist in Media
    - This plan url is not exist in Plan
    - This document is not exist in Document
    type: string
    x-enum-varnames:
    - somethingWentWrong
    - badRequestMessage
    - userNotAuthorizedMessage
    - invalidCredentialsMessage
    - permissionDeniedErrormessage
    - noDataFoundErrormessage
    - cannotGiveEmailAndUsernameErrorCode
    - companyNotVerifiedErrorCode
    - alreadyExistCode
    - uniqueConstraintViolationMessage
    - usernameAlreadyExistsMessage
    - emailAlreadyExistsMessage
    - emailAlreadyExistErrorMessage
    - DuplicateAuctionTitleErrorMessage
    - duplicatePlanTitleErrorMessage
    - duplicateDocumentTypeErrorMessage
    - AuctionTypeRequiredErrorMessage
    - AuctionIdRequiredForListErrorMessage
    - InvalidAuctionTypeErrorMessage
    - ActivityTypeRequiredErrorMessage
    - ActivityTypeNotFountErrorMessage
    - AuctionCanNotUpdateErrorMessage
    - MediaNotFoundErorrMessage
    - PlanDocumentNotFoundErrorMessage
    - DocumentNotFoundErrorMessage
  aqary_admin_pkg_utils_exceptions.Exception:
    properties:
      errorCode:
        $ref: '#/definitions/aqary_admin_pkg_utils_exceptions.ErrorCode'
      errorMessage:
        $ref: '#/definitions/aqary_admin_pkg_utils_exceptions.ErrorMessage'
      httpCode:
        type: integer
    type: object
  aqary_admin_pkg_utils_fn.CustomFormat:
    properties:
      id:
        type: integer
      label:
        type: string
    type: object
  exhibition.CreateExhibitionMediaSwagger:
    properties:
      Message:
        example: success
        type: string
      data:
        allOf:
        - $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.ExhibitionsMedium'
        description: Total   int                  `json:"Total" example:"1" format:"int64"`
    type: object
  exhibition.DeleteExhibitionByIDSwagger:
    properties:
      Message:
        example: success
        type: string
      data:
        description: Total   int    `json:"Total" example:"1" format:"int64"`
        example: exhibition deleted successfully
        type: string
    type: object
  exhibition.DeleteExhibitionMediaByGalleryTypeSwagger:
    properties:
      Message:
        example: success
        type: string
      data:
        description: Total   int                  `json:"Total" example:"1" format:"int64"`
        example: exhibition media deleted successfully
        type: string
    type: object
  exhibition.DeleteExhibitionMeidaByUrlSwagger:
    properties:
      Message:
        example: success
        type: string
      data:
        description: Total   int                  `json:"Total" example:"1" format:"int64"`
        example: exhibition media deleted successfully
        type: string
    type: object
  exhibition.GetAllExhibitionRow:
    properties:
      address:
        type: string
      banner:
        type: string
      country:
        type: string
      end_date:
        type: string
      hosted by: {}
      id:
        type: integer
      ref_no:
        type: string
      start_date:
        type: string
      title:
        type: string
    type: object
  exhibition.GetAllExhibitionSwagger:
    properties:
      Message:
        example: success
        type: string
      Total:
        example: 1
        format: int64
        type: integer
      data:
        items:
          $ref: '#/definitions/exhibition.GetAllExhibitionRow'
        type: array
    type: object
  exhibition.GetExhibitionByIdSwagger:
    properties:
      Message:
        example: success
        type: string
      data:
        allOf:
        - $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.Exhibition'
        description: Total   int           `json:"Total" example:"1" format:"int64"`
    type: object
  exhibition.GetExhibitionMediaSwagger:
    properties:
      Message:
        example: success
        type: string
      Total:
        example: 1
        format: int64
        type: integer
      data:
        items:
          $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.ExhibitionsMedium'
        type: array
    type: object
  exhibition.UpdateExhibitionByIDSwagger:
    properties:
      Message:
        example: success
        type: string
      data:
        allOf:
        - $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.Exhibition'
        description: Total   int           `json:"Total" example:"1" format:"int64"`
    type: object
  exhibition_booths.CreateExhibitionBoothSwagger:
    properties:
      Message:
        example: success
        type: string
      data:
        allOf:
        - $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.ExhibitionBooth'
        description: Total   int           `json:"Total" example:"1" format:"int64"`
    type: object
  exhibition_booths.DeleteSingleExhibitionBoothSwagger:
    properties:
      Message:
        example: success
        type: string
      data:
        description: Total   int           `json:"Total" example:"1" format:"int64"`
        example: exhibition booth deleted successfully
        type: string
    type: object
  exhibition_booths.GetAllExhibitionBoothsSwagger:
    properties:
      Message:
        example: success
        type: string
      Total:
        example: 1
        format: int64
        type: integer
      data:
        items:
          $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.ExhibitionBooth'
        type: array
    type: object
  exhibition_booths.GetSingleExhibitionBoothSwagger:
    properties:
      Message:
        example: success
        type: string
      data:
        allOf:
        - $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.ExhibitionBooth'
        description: Total   int           `json:"Total" example:"1" format:"int64"`
    type: object
  exhibition_booths.UpdateExhibitionBoothSwagger:
    properties:
      Message:
        example: success
        type: string
      data:
        allOf:
        - $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.ExhibitionBooth'
        description: Total   int           `json:"Total" example:"1" format:"int64"`
    type: object
  old_repo_companies_subscriptions.CompanySubscription:
    properties:
      company_name:
        type: string
      end_date:
        type: string
      featured_units:
        type: integer
      premium_units:
        type: integer
      remaining_units:
        type: integer
      standard_units:
        type: integer
      start_date:
        type: string
      topdeal_units:
        type: integer
      total_unit:
        type: integer
    type: object
  old_repo_companies_subscriptions.DeleteReq:
    properties:
      countries_id:
        type: integer
      id:
        type: integer
    required:
    - countries_id
    - id
    type: object
  old_repo_companies_subscriptions.GetPendingSubscriptionRequest:
    properties:
      page_no:
        minimum: 1
        type: integer
      page_size:
        maximum: 100
        minimum: 1
        type: integer
      status:
        type: integer
      subscription_mode:
        type: integer
    required:
    - page_no
    - page_size
    - subscription_mode
    type: object
  old_repo_companies_subscriptions.SPrice:
    properties:
      countries_id:
        type: integer
      price:
        type: number
      subscription_name:
        type: string
    type: object
  old_repo_companies_subscriptions.SubscriptionOutput:
    properties:
      company_id:
        type: integer
      company_type:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      end_date:
        type: string
      featured_discount:
        type: string
      featured_units:
        type: integer
      featured_units_actual_price:
        type: number
      featured_units_price:
        type: number
      featured_units_price_after_discount:
        type: number
      id:
        type: integer
      is_branch:
        type: boolean
      order_no:
        type: string
      premium_discount:
        type: string
      premium_units:
        type: integer
      premium_units_actual_price:
        type: number
      premium_units_price:
        type: number
      premium_units_price_after_discount:
        type: number
      remaining_units:
        type: integer
      standard_discount:
        type: string
      standard_units:
        type: integer
      standard_units_actual_price:
        type: number
      standard_units_price:
        type: number
      standard_units_price_after_discount:
        type: number
      start_date:
        type: string
      status:
        type: integer
      subscription_duration:
        type: string
      subscription_mode:
        type: integer
      topdeal_discount:
        type: string
      topdeal_unit_actual_price:
        type: number
      topdeal_unit_price:
        type: number
      topdeal_units:
        type: integer
      topdeal_units_price_after_discount:
        type: number
      total_price:
        type: string
      total_unit:
        type: integer
      updated_at:
        type: string
    type: object
  old_repo_companies_subscriptions.SubscriptionPriceReq:
    properties:
      page_no:
        type: integer
      page_size:
        type: integer
    required:
    - page_no
    - page_size
    type: object
  old_repo_companies_subscriptions.createSubscriptionRequest:
    properties:
      company_branch:
        type: boolean
      company_id:
        type: integer
      company_type:
        type: integer
      end_date:
        type: string
      featured_discount:
        type: string
      featured_units:
        type: integer
      featured_units_actual_price:
        type: number
      featured_units_after_discount:
        type: number
      featured_units_price:
        type: number
      free_company_branch:
        type: boolean
      free_end_date:
        type: string
      free_featured_discount:
        type: string
      free_featured_units:
        type: integer
      free_featured_units_actual_price:
        type: number
      free_featured_units_after_discount:
        type: number
      free_featured_units_price:
        type: number
      free_premium_discount:
        type: string
      free_premium_units:
        type: integer
      free_premium_units_actual_price:
        type: number
      free_premium_units_after_discount:
        type: number
      free_premium_units_price:
        type: number
      free_standard_discount:
        type: string
      free_standard_units:
        type: integer
      free_standard_units_actual_price:
        type: number
      free_standard_units_price:
        type: number
      free_standard_units_price_after_discount:
        type: number
      free_start_date:
        type: string
      free_subscription_duration:
        type: string
      free_subscription_mode:
        type: integer
      free_topdeal_discount:
        type: string
      free_topdeal_units:
        type: integer
      free_topdeal_units_actual_price:
        type: number
      free_topdeal_units_after_discount:
        type: number
      free_topdeal_units_price:
        type: number
      free_total_price:
        type: string
      free_total_unit:
        type: integer
      premium_discount:
        type: string
      premium_units:
        type: integer
      premium_units_actual_price:
        type: number
      premium_units_after_discount:
        type: number
      premium_units_price:
        type: number
      standard_discount:
        type: string
      standard_units:
        type: integer
      standard_units_actual_price:
        type: number
      standard_units_price:
        type: number
      standard_units_price_after_discount:
        type: number
      start_date:
        type: string
      subscription_duration:
        type: string
      subscription_mode:
        type: integer
      topdeal_discount:
        type: string
      topdeal_units:
        type: integer
      topdeal_units_actual_price:
        type: number
      topdeal_units_after_discount:
        type: number
      topdeal_units_price:
        type: number
      total_price:
        type: string
      total_unit:
        type: integer
    required:
    - company_id
    - company_type
    type: object
  old_repo_companies_subscriptions.draftSubscriptionRequest:
    properties:
      company_id:
        type: integer
      company_type:
        type: integer
      is_branch:
        type: boolean
    required:
    - company_id
    - company_type
    type: object
  pgtype.Bool:
    properties:
      bool:
        type: boolean
      valid:
        type: boolean
    type: object
  pgtype.Float8:
    properties:
      float64:
        type: number
      valid:
        type: boolean
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Int4:
    properties:
      int32:
        type: integer
      valid:
        type: boolean
    type: object
  pgtype.Int8:
    properties:
      int64:
        type: integer
      valid:
        type: boolean
    type: object
  pgtype.Text:
    properties:
      string:
        type: string
      valid:
        type: boolean
    type: object
  pgtype.Timestamptz:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        type: string
      valid:
        type: boolean
    type: object
  response.Exhibition:
    properties:
      cities_id:
        type: integer
      community_id:
        type: integer
      countries_id:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      description:
        type: string
      description_ar:
        type: string
      email:
        type: string
      end_date:
        type: string
      end_time:
        type: string
      event_banner_url:
        type: string
      event_logo_url:
        type: string
      event_status:
        type: integer
      exhibition_category:
        type: integer
      exhibition_type:
        type: integer
      facilities:
        items:
          type: integer
        type: array
      hosted_by_id:
        type: integer
      hosted_company_type:
        type: integer
      id:
        type: integer
      is_host_branch:
        type: boolean
      is_verified:
        type: boolean
      lat:
        type: number
      lng:
        type: number
      location_url:
        type: string
      mobile:
        type: string
      no_of_booths:
        type: integer
      no_of_floors:
        type: integer
      promotion_video:
        type: string
      ref_no:
        type: string
      registration_fees:
        type: number
      registration_link:
        type: string
      self_hosted:
        type: boolean
      specific_address:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      states_id:
        type: integer
      sub_communities_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      whatsapp:
        type: string
    type: object
info:
  contact: {}
  description: Testing Swagger APIs.
  title: Aqary  APIs
  version: "1.0"
paths:
  /api/agents/search:
    get:
      consumes:
      - application/json
      description: Search for agents based on a search string
      parameters:
      - description: Search string
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.SearchAllAgentRow'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Search all agents
      tags:
      - agents
  /api/dashboard/{id}:
    get:
      description: Update shared docs
      parameters:
      - in: query
        name: page_no
        required: true
        type: integer
      - in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.SingleShareDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Update  shared doc
      tags:
      - share
  /api/dashboard/auction/activities/changes:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/activities/getAllActivies:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/addDocumentInDocument:
    put:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/addDocumentInPlan:
    put:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/addMediaInMedia:
    put:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/createAuction:
    post:
      consumes:
      - application/json
      description: This API is responsible to create a auction, it also save address
        and property informations
      parameters:
      - description: Json body to create Auction
        in: body
        name: Auction
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_dto.AuctionInputsDto'
      produces:
      - application/json
      responses:
        "200":
          description: Response for Successfully Created Auction
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_dto.AuctionViewDetails'
        "400":
          description: Response for bad request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Response for unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Response when somethign went wrong
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: API to add new auction
      tags:
      - auction
  /api/dashboard/auction/createAuctionPlan:
    post:
      consumes:
      - application/json
      description: Adds a new Plan record
      parameters:
      - description: Json body to create Plan
        in: body
        name: createPlanPayload
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_dto.CreatePlanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_dto.Plan'
        "400":
          description: Response for Bad request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Response for unauthorized access
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Something went wrong response object
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: Create a new Plan
      tags:
      - auction
  /api/dashboard/auction/createDocument:
    post:
      responses: {}
  /api/dashboard/auction/createFaq:
    post:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/createMedia:
    post:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/createPartners:
    post:
      consumes:
      - application/json
      description: Adds a new auction record
      parameters:
      - description: Partner object
        in: body
        name: createPartnerPayload
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_dto.CreatePartnerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response object
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_dto.Partner'
        "400":
          description: Bad request response object
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized request response object
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Something went wrong response object
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: Create a new auction
      tags:
      - auction
  /api/dashboard/auction/deleteAllPartner:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/deleteAuction/{auctionId}:
    delete:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/deleteDocument/{documentId}:
    delete:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/deleteFaqs/{faqId}:
    delete:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/deleteMediaById/{mediaId}:
    delete:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/deletePartner/{partnerId}:
    delete:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/deletePlan/{planId}:
    delete:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/findActionById/{auctionId}:
    get:
      consumes:
      - application/json
      description: Retrieves a auction record by its ID
      parameters:
      - description: Auction ID
        in: path
        name: auctionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response for successfully retrieved auction
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_dto.AuctionViewDetails'
        "401":
          description: Response for unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Auction not found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: Find auction by ID
      tags:
      - auction
  /api/dashboard/auction/findFaqsById/{faqId}:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/findPartnerById/{partnerId}:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/getAllAuction:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/getAllAuctionPlan:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/getAllDeletedAuction:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/getAllDeletedFaqs:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/getAllDocuments:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/getAllFaqs:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/getAllMediaById:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/getAllPartners:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/getAuctionMediaById/{mediaId}:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/getDocumentById/{documentId}:
    get:
      responses: {}
  /api/dashboard/auction/removeDocumentFromPlan:
    put:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/removeDocumentInDocument:
    put:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/removeMedia:
    put:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/restore:
    post:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/restoreAuction:
    post:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/restorePartener:
    post:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/updateAuction/{auctionId}:
    put:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/updateFaqs/{faqId}:
    put:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/auction/updatePartner/{partnerId}:
    put:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/creatProjectSharing:
    post:
      consumes:
      - multipart/form-data
      description: Create a new project share (internal or external)
      parameters:
      - description: Share type (1 for internal, 2 for external)
        in: formData
        name: share_type
        required: true
        type: integer
      - description: Project ID
        in: formData
        name: project_id
        required: true
        type: integer
      - description: Phase ID
        in: formData
        name: phase_id
        type: integer
      - description: Property Key
        in: formData
        name: property_key
        type: integer
      - description: Property ID
        in: formData
        name: property_id
        type: integer
      - description: Property Branch
        in: formData
        name: property_branch
        type: boolean
      - description: Is Unit
        in: formData
        name: is_unit
        type: boolean
      - description: Unit ID
        in: formData
        name: unit_id
        type: integer
      - description: Unit Category
        in: formData
        name: unit_category
        type: string
      - collectionFormat: csv
        description: Users (for internal sharing)
        in: formData
        items:
          type: string
        name: users
        type: array
      - description: Documents JSON
        in: formData
        name: docs
        type: string
      - description: Companies JSON (for external sharing)
        in: formData
        name: companies
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
      security:
      - bearerToken: []
      summary: Create a project share
      tags:
      - project-share
  /api/dashboard/createExhibition:
    post:
      consumes:
      - multipart/form-data
      description: Create an exhibition
      parameters:
      - in: formData
        name: cities_id
        required: true
        type: integer
      - in: formData
        name: community_id
        required: true
        type: integer
      - in: formData
        name: countries_id
        required: true
        type: integer
      - in: formData
        name: description
        required: true
        type: string
      - in: formData
        name: description_ar
        type: string
      - in: formData
        name: email
        required: true
        type: string
      - in: formData
        name: end_date
        required: true
        type: string
      - description: 'exhibition category: 1-real state , 2-technology , 3-services'
        enum:
        - 1
        - 2
        - 3
        in: formData
        name: exhibition_category
        required: true
        type: integer
      - description: 'exhibition type: 1-exhibition , 2-trade show , 3-conference
          , 4- workshops 5-training'
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        in: formData
        name: exhibition_type
        required: true
        type: integer
      - in: formData
        name: hosted_by_id
        type: integer
      - in: formData
        name: hosted_company_type
        type: integer
      - in: formData
        name: is_host_branch
        type: boolean
      - in: formData
        name: location_url
        required: true
        type: string
      - in: formData
        name: mobile
        required: true
        type: string
      - in: formData
        minimum: 1
        name: no_of_booths
        required: true
        type: integer
      - in: formData
        name: no_of_floors
        type: integer
      - in: formData
        name: promotion_video
        type: string
      - in: formData
        name: registration_fees
        type: number
      - in: formData
        name: registration_link
        required: true
        type: string
      - in: formData
        name: self_hosted
        required: true
        type: boolean
      - in: formData
        name: specific_address
        required: true
        type: string
      - in: formData
        name: start_date
        required: true
        type: string
      - in: formData
        name: states_id
        required: true
        type: integer
      - in: formData
        name: sub_community_id
        required: true
        type: integer
      - in: formData
        name: title
        required: true
        type: string
      - in: formData
        name: whatsapp
        required: true
        type: string
      - description: Upload_file
        in: formData
        name: event_logo_file
        required: true
        type: file
      - description: Upload_file
        in: formData
        name: event_banner_file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Exhibition'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: create exhibition
      tags:
      - Exhibition
  /api/dashboard/createExhibitionBooth:
    post:
      consumes:
      - multipart/form-data
      description: create exhibition booth
      parameters:
      - in: formData
        minimum: 1
        name: exhibitions_id
        required: true
        type: integer
      - in: formData
        name: floor_no
        required: true
        type: string
      - in: formData
        name: interactive_link
        type: string
      - in: formData
        name: no_of_booths
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/exhibition_booths.CreateExhibitionBoothSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: create exhibition booth
      tags:
      - Exhibitions
  /api/dashboard/createExhibitionMedia:
    post:
      consumes:
      - multipart/form-data
      description: create exhibition media
      parameters:
      - in: formData
        minimum: 1
        name: exhibition_id
        required: true
        type: integer
      - description: 1 for image , 2 for brochure , 3 for video , 4 for promotion
          video
        enum:
        - 1
        - 2
        - 3
        - 4
        in: formData
        name: file_no
        required: true
        type: integer
      - in: formData
        name: gallery_type
        required: true
        type: integer
      - collectionFormat: csv
        in: formData
        items:
          type: string
        name: media_url
        type: array
      - collectionFormat: csv
        description: Upload_file
        in: formData
        items:
          type: file
        name: files
        type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/exhibition.CreateExhibitionMediaSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: create exhibition media
      tags:
      - Exhibitions
  /api/dashboard/createFinancialProvider:
    post:
      consumes:
      - multipart/form-data
      description: create financial providers
      parameters:
      - description: CreateFinancialProviderReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_project.CreateFinancialProviderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.FinancialProvider'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: CreateFinancialProviders
      tags:
      - project
  /api/dashboard/createProject:
    post:
      consumes:
      - multipart/form-data
      description: CreatProject
      parameters:
      - description: CreateProjectRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_project.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: create project
      tags:
      - project
  /api/dashboard/createProjectFinancialProvider:
    post:
      consumes:
      - multipart/form-data
      description: assign financial providers to project or phase
      parameters:
      - description: CreateProjectFinancialProviderReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_project.CreateProjectFinancialProviderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.ProjectFinancialProvider'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: CreateProjectFinancialProviders
      tags:
      - project
  /api/dashboard/createSubscription:
    post:
      description: create a subscription for a company
      parameters:
      - description: CreateSubscription
        in: body
        name: subscriptions
        required: true
        schema:
          $ref: '#/definitions/old_repo_companies_subscriptions.createSubscriptionRequest'
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/old_repo_companies_subscriptions.SubscriptionOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: create a subscription
      tags:
      - subscription
  /api/dashboard/createSubscriptionPrice:
    post:
      description: create subscriptions price
      parameters:
      - description: CreateSubscriptionPrice
        in: body
        name: CreateSubscriptionPrice
        required: true
        schema:
          $ref: '#/definitions/old_repo_companies_subscriptions.SPrice'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.SubscriptionsPrice'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: createsubscriptionsprice
      tags:
      - subscription
  /api/dashboard/deleteExhibitionByID:
    delete:
      description: delete exhibition
      parameters:
      - in: query
        minimum: 1
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exhibition.DeleteExhibitionByIDSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: delete exhibition
      tags:
      - Exhibitions
  /api/dashboard/deleteExhibitionMediaByGalleryType:
    delete:
      description: delete exhibition media by media type
      parameters:
      - description: media exhibiton id
        in: query
        minimum: 1
        name: media_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exhibition.DeleteExhibitionMediaByGalleryTypeSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: delete exhibition media by media type
      tags:
      - Exhibitions
  /api/dashboard/deleteExhibitionMeidaByUrl:
    delete:
      description: delete exhibition media by url
      parameters:
      - in: query
        name: file_url
        required: true
        type: string
      - in: query
        minimum: 1
        name: media_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exhibition.DeleteExhibitionMeidaByUrlSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: delete exhibition media by url
      tags:
      - Exhibitions
  /api/dashboard/deleteFinancialProvider:
    delete:
      consumes:
      - multipart/form-data
      description: Delete a project or phase financial providers
      parameters:
      - description: DeleteFinancialProviderReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_project.DeleteFinancialProviderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: DeleteFinancialProvider
      tags:
      - project
  /api/dashboard/deleteProjectPhaseFinancialProvider:
    delete:
      consumes:
      - multipart/form-data
      description: Delete a project or phase financial providers
      parameters:
      - description: DeleteProjPhasFinancialProvidersReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_project.DeleteProjPhasFinancialProvidersReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: DeleteProjectPhaseFinancialProvider
      tags:
      - project
  /api/dashboard/deleteSingleExhibitionBooth:
    delete:
      description: delete single exhibition booth
      parameters:
      - in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exhibition_booths.DeleteSingleExhibitionBoothSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: delete single exhibition booth
      tags:
      - Exhibitions
  /api/dashboard/deleteSubscriptionPrice:
    delete:
      description: delete subscriptions price
      parameters:
      - description: DeleteSubscriptionPrice
        in: body
        name: DeleteSubscriptionPrice
        required: true
        schema:
          $ref: '#/definitions/old_repo_companies_subscriptions.DeleteReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: DeleteSubscriptionPrice
      tags:
      - subscription
  /api/dashboard/draftSubscription:
    get:
      description: draft subscriptions
      parameters:
      - description: DraftSubscription
        in: body
        name: draftSubscription
        required: true
        schema:
          $ref: '#/definitions/old_repo_companies_subscriptions.draftSubscriptionRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: draft subscriptions
      tags:
      - subscription
  /api/dashboard/findAuctionPlanById/{planId}:
    get:
      responses: {}
      security:
      - bearerToken: []
  /api/dashboard/getAllBrokerCompanyByStateCity/{id}:
    get:
      consumes:
      - multipart/form-data
      description: get all broker company names by city or state
      parameters:
      - description: GetBrokerCompaniesReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_project.GetBrokerCompaniesReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_project.BrokerCompanyNames'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetBrokerCompanyNames
      tags:
      - project
  /api/dashboard/getAllDeveloperCompany:
    get:
      description: GetDeveloperCompanyNames
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_project.DeveloperCompanyNames'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: get developer company names
      tags:
      - project
  /api/dashboard/getAllExhibitionBooths:
    get:
      description: get all exhibition booths
      parameters:
      - in: query
        minimum: 1
        name: page_no
        required: true
        type: integer
      - in: query
        maximum: 100
        minimum: 1
        name: page_size
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exhibition_booths.GetAllExhibitionBoothsSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: get all exhibition booths
      tags:
      - Exhibitions
  /api/dashboard/getAllExhibitions:
    get:
      description: get all exhibitions
      parameters:
      - in: query
        minimum: 1
        name: page_no
        required: true
        type: integer
      - in: query
        maximum: 100
        minimum: 1
        name: page_size
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exhibition.GetAllExhibitionSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: get all exhibitions
      tags:
      - Exhibitions
  /api/dashboard/getAllFinancialProviders:
    get:
      consumes:
      - multipart/form-data
      description: get all financial providers
      parameters:
      - description: GetAllFinancialProviderReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_project.GetAllFinancialProviderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_project.GetAllFinancialProvidersRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetAllFinancialProviders
      tags:
      - project
  /api/dashboard/getAllProjectPhaseFinancialProviders:
    get:
      consumes:
      - multipart/form-data
      description: get all project or phase financial providers
      parameters:
      - description: GetAllProjPhasFinancialProvidersReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_project.GetAllProjPhasFinancialProvidersReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_project.GetAllProjPhasFinancialProvidersRes'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetAllProjectPhaseFinancialProviders
      tags:
      - project
  /api/dashboard/getAllSubDeveloperCompany/{id}:
    get:
      description: get all sub developer company names by parent company id
      parameters:
      - description: Parent ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_project.DeveloperCompanyNames'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetSubDeveloperCompanyNames
      tags:
      - project
  /api/dashboard/getAllSubscription:
    get:
      description: get all subscriptions
      parameters:
      - description: GetAllSubscription
        in: body
        name: getallsubscriptions
        required: true
        schema:
          $ref: '#/definitions/old_repo_companies_subscriptions.GetPendingSubscriptionRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/old_repo_companies_subscriptions.CompanySubscription'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: Getallsubscriptions
      tags:
      - subscription
  /api/dashboard/getAllSubscriptionPrice:
    get:
      description: list subscriptions price
      parameters:
      - description: ListSubscriptionsPrice
        in: body
        name: ListSubscriptionsPrice
        required: true
        schema:
          $ref: '#/definitions/old_repo_companies_subscriptions.SubscriptionPriceReq'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.SubscriptionsPrice'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: ListSubscriptionsPrice
      tags:
      - subscription
  /api/dashboard/getExhibitionById:
    get:
      description: get single exhibition
      parameters:
      - in: query
        minimum: 1
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exhibition.GetExhibitionByIdSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: get single exhibition
      tags:
      - Exhibitions
  /api/dashboard/getFinancialProviderNamesByType:
    get:
      consumes:
      - multipart/form-data
      description: get all financial providers name by type
      parameters:
      - description: GetProviderNamesByTypeReq
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_project.GetProviderNamesByTypeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_old_repo_model.CustomFormat'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetFinancialProviderNamesByType
      tags:
      - project
  /api/dashboard/getMediaExhibition:
    get:
      description: get exhibition media
      parameters:
      - in: query
        minimum: 1
        name: exhibition_id
        required: true
        type: integer
      - in: query
        minimum: 1
        name: page_no
        required: true
        type: integer
      - in: query
        maximum: 100
        minimum: 1
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exhibition.GetExhibitionMediaSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: get exhibition media
      tags:
      - Exhibitions
  /api/dashboard/getSingleExhibitionBooth:
    get:
      description: get single exhibition booth
      parameters:
      - in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exhibition_booths.GetSingleExhibitionBoothSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: get single exhibition booth
      tags:
      - Exhibitions
  /api/dashboard/getSubscriptionPrice/:id:
    get:
      description: get subscriptions price
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.SubscriptionsPrice'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetSubscriptionPrice
      tags:
      - subscription
  /api/dashboard/updateExhibition:
    put:
      description: update exhibition
      parameters:
      - in: formData
        name: Location_url
        type: string
      - in: formData
        name: cities_id
        type: integer
      - in: formData
        name: community_id
        type: integer
      - in: formData
        name: countries_id
        type: integer
      - in: formData
        name: description
        type: string
      - in: formData
        name: description_ar
        type: string
      - in: formData
        name: email
        type: string
      - in: formData
        name: end_date
        type: string
      - in: formData
        name: end_time
        type: string
      - in: formData
        name: event_banner_url
        type: string
      - in: formData
        name: event_status
        type: integer
      - in: formData
        name: exhibition_category
        type: integer
      - in: formData
        name: exhibition_type
        type: integer
      - collectionFormat: csv
        in: formData
        items:
          type: integer
        name: facilities
        type: array
      - in: formData
        name: hosted_by_id
        type: integer
      - in: formData
        name: hosted_company_type
        type: integer
      - in: formData
        minimum: 1
        name: id
        required: true
        type: integer
      - in: formData
        name: is_host_branch
        type: boolean
      - in: formData
        name: lat
        type: number
      - in: formData
        name: lng
        type: number
      - in: formData
        name: mobile
        type: string
      - in: formData
        name: no_of_booths
        type: integer
      - in: formData
        name: no_of_floors
        type: integer
      - in: formData
        name: promotion_video
        type: string
      - in: formData
        name: registration_fees
        type: number
      - in: formData
        name: registration_link
        type: string
      - in: formData
        name: self_hosted
        type: boolean
      - in: formData
        name: specific_address
        type: string
      - in: formData
        name: start_date
        type: string
      - in: formData
        name: start_time
        type: string
      - in: formData
        name: states_id
        type: integer
      - in: formData
        name: sub_community_id
        type: integer
      - in: formData
        name: title
        type: string
      - in: formData
        name: updated_at
        type: string
      - in: formData
        name: whatsapp
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exhibition.UpdateExhibitionByIDSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: update exhibition
      tags:
      - Exhibitions
  /api/dashboard/updateExhibitionBooth:
    put:
      description: update exhibition booth
      parameters:
      - in: formData
        name: exhibitions_id
        type: integer
      - in: formData
        name: floor_no
        type: string
      - in: formData
        minimum: 1
        name: id
        required: true
        type: integer
      - in: formData
        name: interactive_link
        type: string
      - in: formData
        name: no_of_booths
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/exhibition_booths.UpdateExhibitionBoothSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: update exhibition booth
      tags:
      - Exhibitions
  /api/dashboard/updateSubscriptionPrice/:id:
    put:
      description: update subscriptions price
      parameters:
      - description: UpdateSubscriptionPrice
        in: body
        name: UpdateSubscriptionPrice
        required: true
        schema:
          $ref: '#/definitions/old_repo_companies_subscriptions.SPrice'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.SubscriptionsPrice'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: UpdateSubscriptionPrice
      tags:
      - subscription
  /api/department/createDepartment:
    post:
      description: CreateDepartment
      parameters:
      - description: CreateDepartmentRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.CreateDepartmentRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.Department'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: create department
      tags:
      - department
  /api/departments:
    get:
      consumes:
      - application/json
      description: Get a list of all departments with pagination
      parameters:
      - description: Page Size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page Number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Search string
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.Department'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all departments
      tags:
      - departments
  /api/departments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a department by its ID
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Delete a department
      tags:
      - departments
    get:
      consumes:
      - application/json
      description: Get details of a department by its ID
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.Department'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get a department by ID
      tags:
      - departments
    put:
      consumes:
      - application/json
      description: Update a department's details
      parameters:
      - description: Department ID
        in: path
        name: id
        required: true
        type: integer
      - description: Department details to update
        in: body
        name: department
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.UpdateDepartmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.Department'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Update a department
      tags:
      - departments
  /api/project-share/by-project:
    get:
      consumes:
      - application/json
      description: Get all shares for a specific project
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_usecases_shares_project_share.GetAllSharingByProjectReq'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Get all project shares by project
      tags:
      - project-share
  /api/project-share/getAllSharedProjects:
    get:
      consumes:
      - application/json
      description: Get a list of all shared projects with pagination
      parameters:
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
      security:
      - bearerToken: []
      summary: Get all shared projects
      tags:
      - project-share
  /api/project-share/phases-shared-with-me:
    get:
      consumes:
      - application/json
      description: Retrieve all project phases that have been shared with the authenticated
        user
      parameters:
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
      security:
      - BearerAuth: []
      summary: Get all project phases shared with the user
      tags:
      - project-share
  /api/project-share/properties-shared-with-me:
    get:
      consumes:
      - application/json
      description: Retrieve all project properties that have been shared with the
        authenticated user
      parameters:
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
      security:
      - BearerAuth: []
      summary: Get all project properties shared with the user
      tags:
      - project-share
  /api/project-share/property-units-shared-with-me:
    get:
      consumes:
      - application/json
      description: Retrieve all project property units that have been shared with
        the authenticated user
      parameters:
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
      security:
      - BearerAuth: []
      summary: Get all project property units shared with the user
      tags:
      - project-share
  /api/project-share/shared-with-me:
    get:
      consumes:
      - application/json
      description: Retrieve all projects that have been shared with the authenticated
        user
      parameters:
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_internal_delivery_rest_helper.ApiResponse'
      security:
      - BearerAuth: []
      summary: Get all projects shared with the user
      tags:
      - project-share
  /api/project-share/unshare:
    post:
      consumes:
      - application/json
      description: Remove sharing for a specific project
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_usecases_shares_project_share.UnsharedReq'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Unshare a project
      tags:
      - project-share
  /api/publish:
    post:
      consumes:
      - application/json
      description: Create a new publish listing
      parameters:
      - description: Publish creation request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.CreatePublishRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Create publish listing
      tags:
      - publish
  /api/publish-project/all:
    get:
      consumes:
      - application/json
      description: Retrieve all published projects for the authenticated user
      parameters:
      - in: query
        name: page_no
        required: true
        type: integer
      - in: query
        name: page_size
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.PublishProjectOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Get all published projects
      tags:
      - publish-project
  /api/publish-project/phases:
    get:
      consumes:
      - application/json
      description: Retrieve all published project phases for the authenticated user
      parameters:
      - in: query
        name: page_no
        required: true
        type: integer
      - in: query
        name: page_size
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.PublishProjectOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Get all published project phases
      tags:
      - publish-project
  /api/publish-project/portal-enable-disable:
    post:
      consumes:
      - application/json
      description: Enable or disable one or multiple published portals
      parameters:
      - description: Enable/Disable request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.EnableOrDisableReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.PublishListing'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Enable or disable published portals
      tags:
      - publish-project
  /api/publish-project/properties:
    get:
      consumes:
      - application/json
      description: Retrieve all published project properties for the authenticated
        user
      parameters:
      - in: query
        name: page_no
        required: true
        type: integer
      - in: query
        name: page_size
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.PublishProjectPropertyOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Get all published project properties
      tags:
      - publish-project
  /api/publish-project/property-units:
    get:
      consumes:
      - application/json
      description: Retrieve all published project property units for the authenticated
        user
      parameters:
      - in: query
        name: page_no
        required: true
        type: integer
      - in: query
        name: page_size
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.PublishProjectPropertyUnitOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Get all published project property units
      tags:
      - publish-project
  /api/publish-project/unpublish/{id}:
    delete:
      consumes:
      - application/json
      description: Remove a published project
      parameters:
      - description: Publish ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Unpublish a project
      tags:
      - publish-project
  /api/publish/gallery:
    delete:
      consumes:
      - application/json
      description: Delete a gallery item from a publish listing
      parameters:
      - description: Gallery delete request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.GalleryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Delete gallery item
      tags:
      - publish
    post:
      consumes:
      - multipart/form-data
      description: Create a new gallery item for a publish listing
      parameters:
      - in: formData
        maximum: 4
        minimum: 1
        name: file_no
        required: true
        type: integer
      - collectionFormat: csv
        in: formData
        items:
          type: string
        name: file_urls
        type: array
      - in: formData
        name: main_media_section
        required: true
        type: string
      - description: Files to upload
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.GalleryOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Create gallery for publish
      tags:
      - publish
  /api/publish/gallery/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve the gallery and plans for a specific publish listing
      parameters:
      - description: Publish Listing ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_usecases_shares_publish.PlanAndGalleryOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Get portal gallery
      tags:
      - publish
  /api/publish/web-portals:
    get:
      consumes:
      - application/json
      description: Retrieve all shared requests
      parameters:
      - in: query
        name: page_no
        required: true
        type: integer
      - in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.ShareRequest'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - BearerAuth: []
      summary: Get all shared doc request
      tags:
      - share
  /api/user/checkEmail:
    post:
      description: Check if an email already exists
      parameters:
      - description: CheckEmailRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.CheckEmailRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: CheckEmail
      tags:
      - users
  /api/user/checkUsername:
    post:
      description: Check if a username already exists
      parameters:
      - description: CheckUsernameRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.CheckUsernameRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: CheckUsername
      tags:
      - users
  /api/user/createCompanyUser:
    post:
      consumes:
      - application/json
      description: Create a new company user with the provided details
      parameters:
      - description: User details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.CreateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: Create a new company user
      tags:
      - company-users
  /api/user/createRole:
    post:
      consumes:
      - application/json
      description: Create a new role
      parameters:
      - description: Role details
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Create a new role
      tags:
      - roles
  /api/user/createRolePermission:
    post:
      consumes:
      - application/json
      description: Create a new role permission
      parameters:
      - description: Role Permission details
        in: body
        name: rolePermission
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.CreateRolePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.RolesPermission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Create a new role permission
      tags:
      - role-permissions
  /api/user/createSectionPermission:
    post:
      consumes:
      - application/json
      description: Create a new section permission
      parameters:
      - description: Section Permission details
        in: body
        name: sectionPermission
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.CreateSectionPermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.SectionPermission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Create a new section permission
      tags:
      - section-permissions
  /api/user/createSubSectionPermission:
    post:
      consumes:
      - application/json
      description: Create a new sub-section permission
      parameters:
      - description: Sub-section Permission details
        in: body
        name: subSectionPermission
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.CreateSubSectionPermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.SubSection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Create a new sub-section permission
      tags:
      - sub-section-permissions
  /api/user/createusertype:
    post:
      description: CreateUserType
      parameters:
      - description: UserTypeRequest
        in: body
        name: UserTypeRequest
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.UserTypeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.UserType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: CreateUserType
      tags:
      - usertype
  /api/user/dashboardLogin:
    post:
      description: dashboard  login
      parameters:
      - description: DashboardLogin
        in: body
        name: DashboardLogin
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.LoginReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.DashboardResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: DashboardLogin
      tags:
      - auth
  /api/user/deleteAllRolePermission/{id}:
    delete:
      consumes:
      - application/json
      description: Delete all permissions for an existing role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Delete all permissions for a role
      tags:
      - role-permissions
  /api/user/deleteAqaryUser/{id}:
    delete:
      description: Delete an Aqary user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Delete an Aqary user
      tags:
      - aqary_users
  /api/user/deleteOneRolePermission/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a single permission from an existing role
      parameters:
      - description: Role Permission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Permission to delete
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.DeleteOneRolePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.RolesPermission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Delete a single permission from a role
      tags:
      - role-permissions
  /api/user/deletePendingUser:
    delete:
      description: DeletePendingUser
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: DeletePendingUser
      tags:
      - pending_user
  /api/user/deleteRole/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Delete a role
      tags:
      - roles
  /api/user/deleteSectionPermission/{id}:
    delete:
      consumes:
      - application/json
      description: Update an existing section permission
      parameters:
      - description: Section Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Delete a section permission
      tags:
      - section-permissions
  /api/user/deleteSubSection/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing sub-section permission
      parameters:
      - description: Sub-section Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Delete a sub-section permission
      tags:
      - sub-section-permissions
  /api/user/deleteusertype/:id:
    delete:
      description: DeleteUserType
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.UserType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: DeleteUserType
      tags:
      - usertype
  /api/user/getAllAqaryUsers:
    get:
      description: Get a list of all Aqary users with pagination
      parameters:
      - description: Page Size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page Number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Search string
        in: query
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_user.AllUserOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all Aqary users
      tags:
      - aqary_users
  /api/user/getAllAqaryUsersByCountryId:
    get:
      description: Get a list of all Aqary users filtered by country with pagination
      parameters:
      - description: Page Size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page Number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Country ID
        in: query
        name: country_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_user.AllUserOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all Aqary users by country
      tags:
      - aqary_users
  /api/user/getAllDeletedAqaryUser:
    get:
      description: Get a list of all deleted Aqary users with pagination
      parameters:
      - description: Page Size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page Number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Search string
        in: query
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_user.DeletedAqaryUserOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all deleted Aqary users
      tags:
      - aqary_users
  /api/user/getAllDeletedAqaryUserWithoutPagination:
    get:
      description: Get a list of all deleted Aqary users without pagination
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_user.DeletedAqaryUserOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all deleted Aqary users without pagination
      tags:
      - aqary_users
  /api/user/getAllNestedSubSectionPermission/{id}:
    get:
      consumes:
      - application/json
      description: Get all nested sub-section permissions without permission for a
        specific ID
      parameters:
      - description: Sub-section Button ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.SubSection'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all nested sub-section permissions without permission by ID
      tags:
      - sub-section-permissions
  /api/user/getAllOtherUsers:
    get:
      description: GetAllOtherUser
      parameters:
      - description: GetAllUserRequest
        in: body
        name: UserTypeRequest
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.GetAllUserRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_user.AllUserOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetAllOtherUser
      tags:
      - other_user
  /api/user/getAllOtherUsersByCountry:
    get:
      description: GetAllOtherUserByCountry
      parameters:
      - description: GetAllOtherUserByCountryRequest
        in: body
        name: UserTypeRequest
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.GetAllOtherUserByCountryRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_user.AllUserOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetAllOtherUserByCountry
      tags:
      - other_user
  /api/user/getAllPeddingUsers:
    get:
      description: GetAllPendingUser
      parameters:
      - description: GetAllUserRequest
        in: body
        name: UserTypeRequest
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.GetAllUserRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_user.AllPendingUserOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetAllPendingUser
      tags:
      - pending_user
  /api/user/getAllPermissionWithoutPagination:
    get:
      consumes:
      - application/json
      description: Get all permissions without pagination
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomSectionPermission'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils_exceptions.Exception'
      summary: Get all permissions without pagination
      tags:
      - permissions
  /api/user/getAllQuaternarySubSectionPermission:
    get:
      consumes:
      - application/json
      description: Get all quaternary sub-section permissions without permission with
        pagination
      parameters:
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomAllSecondarySubSectionPermission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all quaternary sub-section permissions without permission
      tags:
      - sub-section-permissions
  /api/user/getAllQuinarySubSectionPermission:
    get:
      consumes:
      - application/json
      description: Get all quinary sub-section permissions without permission with
        pagination
      parameters:
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomAllQuaternarySubSectionPermission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all quinary sub-section permissions without permission
      tags:
      - sub-section-permissions
  /api/user/getAllRolePermission:
    get:
      consumes:
      - application/json
      description: Get all role permissions with pagination
      parameters:
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomRolePermission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all role permissions
      tags:
      - role-permissions
  /api/user/getAllRolePermissionWithoutPagination/all:
    get:
      consumes:
      - application/json
      description: Get all role permissions without pagination
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomRolePermission'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all role permissions without pagination
      tags:
      - role-permissions
  /api/user/getAllRoles:
    get:
      consumes:
      - application/json
      description: Get all roles with pagination
      parameters:
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all roles with pagination
      tags:
      - roles
  /api/user/getAllRolesWithoutPagination/all:
    get:
      consumes:
      - application/json
      description: Get all roles without pagination
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.AllRolesOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all roles without pagination
      tags:
      - roles
  /api/user/getAllSectionPermission:
    get:
      consumes:
      - application/json
      description: Get all section permissions with pagination
      parameters:
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.SectionPermission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all section permissions
      tags:
      - section-permissions
  /api/user/getAllSectionPermissionWithoutPagination:
    get:
      consumes:
      - application/json
      description: Get all section permissions without pagination
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_user.SectionPermission'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all section permissions without pagination
      tags:
      - section-permissions
  /api/user/getAllSubSectionPermission:
    get:
      consumes:
      - application/json
      description: Get all sub-section permissions with pagination
      parameters:
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomAlllPermission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all sub-section permissions
      tags:
      - sub-section-permissions
  /api/user/getAllSubSectionPermission/{id}:
    get:
      consumes:
      - application/json
      description: Get all sub-section permissions for a specific permission
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_responses_user.SubSectionPermissionOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all sub-section permissions for a specific permission
      tags:
      - sub-section-permissions
  /api/user/getAllSubSectionPermissionWithoutPagination:
    get:
      consumes:
      - application/json
      description: Get all sub-section permissions without pagination
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomAlllPermission'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all sub-section permissions without pagination
      tags:
      - sub-section-permissions
  /api/user/getAllTertiarySubSectionPermission:
    get:
      consumes:
      - application/json
      description: Get all tertiary sub-section permissions without permission with
        pagination
      parameters:
      - description: Page number
        in: query
        name: page_no
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.CustomSubSectionSecondaryPermission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get all tertiary sub-section permissions without permission
      tags:
      - sub-section-permissions
  /api/user/getAlluserTypeForWeb:
    get:
      description: GetAllUserTypesForWeb
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.UserType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetAllUserTypesForWeb
      tags:
      - usertype
  /api/user/getCountCompanyUsers:
    get:
      description: Get count of active, inactive, and total company users
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.UserCountOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: Get count of company users
      tags:
      - company_users
  /api/user/getCurrentSubscriptionQuota:
    get:
      consumes:
      - application/json
      description: GetCurrentSubscriptionQuota
      parameters:
      - description: Permission details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.GetSingleUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.GetRemainingCompanyQuotaRow'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetCurrentSubscriptionQuota
      tags:
      - company-users
  /api/user/getRole/{id}:
    get:
      consumes:
      - application/json
      description: Get a role by its ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get a role by ID
      tags:
      - roles
  /api/user/getSingleAqaryUser/{id}:
    get:
      description: Get detailed information of a single Aqary user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.UserOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Get detailed information of a single Aqary user
      tags:
      - aqary_users
  /api/user/getSingleUser/{id}:
    get:
      description: GetSingleUser
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.UserOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetSingleUser
      tags:
      - users
  /api/user/getUserPermission:
    get:
      description: ResetPasswordWithoutOldPasswordRequest
      parameters:
      - description: ResetPasswordWithoutOldPasswordRequest
        in: body
        name: DashboardLogin
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.ResetPasswordWithoutOldPasswordRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: ResetPasswordWithoutOldPasswordRequest
      tags:
      - auth
  /api/user/getallusertype:
    get:
      description: GetAllUserTypes
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.UserType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: GetAllUserTypes
      tags:
      - usertype
  /api/user/getusertype/:id:
    get:
      description: CreateUserType
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.UserType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: CreateUserType
      tags:
      - usertype
  /api/user/grantCompanyAdminPermissions:
    post:
      consumes:
      - application/json
      description: Grant specified permissions to a company admin
      parameters:
      - description: Permission details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: Grant permissions to a company admin
      tags:
      - company-users
  /api/user/register:
    post:
      description: Register user
      parameters:
      - description: RegisterRequest
        in: body
        name: RegisterRequest
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.RegisterRequest'
      responses:
        "200":
          description: done
          schema:
            type: string
      security:
      - bearerToken: []
      summary: Registeruser
      tags:
      - auth
  /api/user/resetCompanyUserPassword:
    put:
      description: Reset the password for a company user
      parameters:
      - description: Reset password request
        in: body
        name: resetReq
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.ResetPasswordRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: Reset company user password
      tags:
      - company_users
  /api/user/resetPassword:
    post:
      description: ResetPassword
      parameters:
      - description: ResetPassword
        in: body
        name: DashboardLogin
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.LoginReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: ResetPassword
      tags:
      - auth
  /api/user/resetPasswordWithoutPassword:
    post:
      description: ResetPasswordWithoutOldPasswordRequest
      parameters:
      - description: ResetPasswordWithoutOldPasswordRequest
        in: body
        name: DashboardLogin
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.ResetPasswordWithoutOldPasswordRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: ResetPasswordWithoutOldPasswordRequest
      tags:
      - auth
  /api/user/restoreAqaryUser/{id}:
    post:
      description: Restore a previously deleted Aqary user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Restore a deleted Aqary user
      tags:
      - aqary_users
  /api/user/updateAqaryUser/{id}:
    put:
      description: Update details of an Aqary user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User details to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.UpdateUserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_responses_user.UpdatedUserOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Update an Aqary user
      tags:
      - aqary_users
  /api/user/updateCompanyUser:
    put:
      consumes:
      - multipart/form-data
      description: Update details of a company user
      parameters:
      - in: formData
        name: city
        type: integer
      - in: formData
        name: community
        type: integer
      - in: formData
        name: company_id
        type: integer
      - in: formData
        name: country
        type: integer
      - in: formData
        name: department
        type: integer
      - in: formData
        name: email
        type: string
      - in: formData
        name: first_name
        type: string
      - in: formData
        name: last_name
        type: string
      - in: formData
        name: permissions
        type: string
      - in: formData
        name: phone_number
        type: string
      - in: formData
        name: roles_id
        type: integer
      - in: formData
        name: state
        type: integer
      - in: formData
        name: sub_community
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: Update company user
      tags:
      - company_users
  /api/user/updateCompanyUserByStatus:
    put:
      description: Update the status of a company user
      parameters:
      - description: Update user status request
        in: body
        name: updateReq
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.UpdateUserByStatusReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: Update company user status
      tags:
      - company_users
  /api/user/updateRole/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated role details
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Update a role
      tags:
      - roles
  /api/user/updateRolePermission/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing role permission
      parameters:
      - description: Role Permission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated role permission details
        in: body
        name: rolePermission
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.UpdateRolePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.RolesPermission'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Update a role permission
      tags:
      - role-permissions
  /api/user/updateSectionPermission/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing section permission
      parameters:
      - description: Section Permission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated section permission details
        in: body
        name: sectionPermission
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.UpdateSectionPermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Update a section permission
      tags:
      - section-permissions
  /api/user/updateSubSection/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing sub-section permission
      parameters:
      - description: Sub-section Permission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated sub-section permission details
        in: body
        name: subSectionPermission
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.UpdateSubSectionPermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.SubSection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: Update a sub-section permission
      tags:
      - sub-section-permissions
  /api/user/updateUserState:
    put:
      description: ResetPasswordWithoutOldPasswordRequest
      parameters:
      - description: UserUpdateStatusReq
        in: body
        name: DashboardLogin
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.UserUpdateStatusReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      summary: UserUpdateStatusReq
      tags:
      - auth
  /api/user/updateusertype/:id:
    put:
      description: UpdateUserType
      parameters:
      - description: UserTypeRequest
        in: body
        name: UserTypeRequest
        required: true
        schema:
          $ref: '#/definitions/aqary_admin_internal_domain_requests_user.UserTypeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/aqary_admin_internal_domain_sqlc_sqlc.UserType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/aqary_admin_pkg_utils.ErrResponseSwagger'
      security:
      - bearerToken: []
      summary: UpdateUserType
      tags:
      - usertype
securityDefinitions:
  bearerToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
